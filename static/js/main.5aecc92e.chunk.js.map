{"version":3,"sources":["components/TaskList/index.js","components/Calendar/dayConfig.js","components/Carousel/index.js","components/Calendar/index.js","components/Button/index.js","api/firebase.js","components/Link/index.js","features/HomePage/index.js","components/textInput/index.js","features/Login/index.js","features/Register/index.js","features/TaskCreator/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["TaskListContainer","styled","div","Task","StyledLink","Link","TaskList","props","console","log","tasks","length","map","value","index","status","type","checked","onChange","handleUpdateStatus","to","pathname","state","isUpdate","textName","text","taskId","taskDay","day","taskDescription","description","className","dayConfig","0","1","2","3","4","5","6","CarouselContainer","CarouselWrapper","CarouselContentWrapper","CarouselContent","attrs","show","CarouselButton","button","CarouselButtonLeft","CarouselButtonRight","Carousel","children","useState","currentIndex","setCurrentIndex","setLength","useEffect","onClick","prevState","CalendarContainer","CalendarItem","isChosen","Markers","hasFinished","hasUnfinished","Calendar","calendarItems","calendarRef","useRef","blockWidth","setBlockWidth","current","offsetWidth","Math","round","date","Date","now","chosenDay","i","format","userData","Object","entries","find","push","handleChoosingDay","id","getDay","getDate","setDate","ref","StyledButton","isDanger","Button","process","REACT_APP_FIREBASE_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","firebaseConfig","apiKey","authDomain","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","databaseURL","firebase_app","firebase","initializeApp","database","auth","ButtonLink","TodoListWrapper","ButtonWrapper","HomePage","isUserLoggedIn","setUserLoggedIn","useReducer","x","forceUpdate","setUserData","setChosenDay","onAuthStateChanged","user","uid","get","then","snapshot","exists","val","data","catch","error","e","currentTarget","updatedTasks","target","updatedData","updates","currentUser","update","signOut","StyledInput","input","isError","TextInput","placeholder","LoginWrapper","LoginContainer","LoginPage","email","setEmail","password","setPassword","isRedirect","setRedirect","signInWithEmailAndPassword","userCredential","code","toast","position","POSITION","TOP_CENTER","autoClose","message","RegisterWrapper","RegisterContainer","RegisterPage","passwordComfirm","setPasswordConfirm","createUserWithEmailAndPassword","tasksRef","newUser","TaskCreatorWrapper","TaskCreatorContainer","StyledTextArea","textarea","CreateTaskPage","location","taskName","setTaskName","setDescription","userTasksRef","updatedTask","success","newTask","remove","App","from","exact","path","Login","Register","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aecc92e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst TaskListContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n   solid red;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > span {\n    align-self: flex-start;\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  .placeholder {\n    font-weight: normal;\n    color: grey;\n    font-size: 15px;\n  }\n`;\n\nconst Task = styled.div`\n  width: 80%;\n  height: 30px;\n   solid blue;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n\n  & > * {\n    margin-left: 20px;\n    height: 20px;\n  }\n  img {\n    justify-self: flex-end;\n    display: none;\n    cursor: pointer;\n  }\n  :hover {\n    img {\n      display: block;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  :visited {\n    color: black;\n  }\n`;\n\nconst TaskList = (props) => {\n  console.log(\"TASK LIST\", props.tasks);\n  return (\n    <TaskListContainer>\n      <span>Tasks for this day</span>\n      {!!props.tasks.length ? (\n        props.tasks.map((value, index) => {\n          console.log(value[1].status);\n          return (\n            <Task key={index}>\n              <input\n                type=\"checkbox\"\n                checked={value[1].status}\n                onChange={props.handleUpdateStatus}\n                value={value[0]}\n              />\n              <StyledLink\n                to={{\n                  pathname: \"/create-task\",\n                  state: {\n                    isUpdate: true,\n                    textName: value[1].text,\n                    taskId: value[0],\n                    taskDay: props.day,\n                    taskDescription: value[1].description,\n                  },\n                }}\n              >\n                <span>{value[1].text}</span>\n              </StyledLink>\n            </Task>\n          );\n        })\n      ) : (\n        <span className=\"placeholder\">\n          You don't have any tasks for this day\n        </span>\n      )}\n    </TaskListContainer>\n  );\n};\n\nexport default TaskList;\n","const dayConfig = {\n  0: \"Sun\",\n  1: \"Mon\",\n  2: \"Tue\",\n  3: \"Wed\",\n  4: \"Thu\",\n  5: \"Fri\",\n  6: \"Sat\",\n};\n\nexport default dayConfig;\n","import { React, useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst CarouselContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CarouselWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  justify-content: center;\n`;\n\nconst CarouselContentWrapper = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  width: 75%;\n  height: 100%;\n`;\n\nconst CarouselContent = styled.div.attrs((props) => ({\n  show: props.show,\n}))`\n  display: flex;\n  justify-content: flex-start;\n  transition: all 250ms linear;\n  width: 100%;\n  -ms-overflow-style: none; /* hide scrollbar in IE and Edge */\n  scrollbar-width: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CarouselButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 38px;\n  height: 38px;\n  border: none;\n  background-color: Transparent;\n  cursor: pointer;\n  color: gray;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst CarouselButtonLeft = styled(CarouselButton)`\n  left: 8px;\n`;\n\nconst CarouselButtonRight = styled(CarouselButton)`\n  right: 8px;\n`;\n\nconst Carousel = (props) => {\n  const { children, show } = props;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [length, setLength] = useState(children.length);\n\n  console.log(show);\n\n  useEffect(() => {\n    setLength(children.length);\n  }, [children]);\n\n  const next = () => {\n    if (currentIndex < length - show) {\n      setCurrentIndex((prevState) => prevState + show);\n    }\n  };\n\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - show);\n    }\n  };\n\n  console.log(currentIndex);\n  return (\n    <CarouselContainer>\n      <CarouselWrapper>\n        {currentIndex > 0 && (\n          <CarouselButtonLeft onClick={prev}>&lt;</CarouselButtonLeft>\n        )}\n\n        <CarouselContentWrapper>\n          <CarouselContent\n            //style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n            show={props.show}\n          >\n            {children.map((value, index) => {\n              if (index >= currentIndex && index < currentIndex + show)\n                return value;\n            })}\n          </CarouselContent>\n        </CarouselContentWrapper>\n\n        {currentIndex < length - show && (\n          <CarouselButtonRight onClick={next}>&gt;</CarouselButtonRight>\n        )}\n      </CarouselWrapper>\n    </CarouselContainer>\n  );\n};\n\nexport default Carousel;\n","import { React, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport dayConfig from \"./dayConfig\";\nimport Carousel from \"../Carousel\";\nimport { format } from \"date-fns\";\n\nconst CalendarContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  height: 200px;\n   solid red;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n\n  & > span {\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n`;\n\nconst CalendarItem = styled.div`\n  width: 50px;\n  height: 90px;\n  margin: 10px;\n  .content {\n    height: 70px;\n    border: 2px solid ${(props) => (props.isChosen ? \"orange\" : \"lightgray\")};\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n\n    cursor: pointer;\n  }\n  .day {\n    color: ${(props) => (props.isChosen ? \"orange\" : \"gray\")};\n  }\n  ${(props) => (props.isChosen ? \"color: orange;\" : \"\")}\n`;\n\nconst Markers = styled.div`\n  height: 20px;\n  width: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  & > * {\n    width: 10px;\n    height: 10px;\n    border: 1px solid orange;\n    border-radius: 50%;\n  }\n\n  .finished {\n    background-color: orange;\n    display: ${(props) => (props.hasFinished ? \"block\" : \"none\")};\n  }\n\n  .unfinished {\n    display: ${(props) => (props.hasUnfinished ? \"block\" : \"none\")};\n  }\n`;\n\nconst Calendar = (props) => {\n  let calendarItems = [];\n  const calendarRef = useRef();\n  const [blockWidth, setBlockWidth] = useState(768);\n  useEffect(() => {\n    setBlockWidth(calendarRef.current.offsetWidth);\n  }, []);\n  let show = Math.round(blockWidth / 100);\n  console.log(\"SHOW\", show);\n  let date = new Date(Date.now());\n  console.log(props.chosenDay);\n  let isChosen = false;\n  for (let i = 0; i < 30; i++) {\n    let hasFinished = false;\n    let hasUnfinished = false;\n\n    if (format(date, \"yyyy-MM-dd\") === props.chosenDay) isChosen = true;\n    else isChosen = false;\n    if (props.userData[format(date, \"yyyy-MM-dd\")]) {\n      Object.entries(props.userData[format(date, \"yyyy-MM-dd\")]).find(\n        (value) => {\n          if (value[1].status === true) hasFinished = true;\n          else if (value[1].status === false) hasUnfinished = true;\n        }\n      );\n    }\n    calendarItems.push(\n      <CalendarItem\n        onClick={props.handleChoosingDay}\n        isChosen={isChosen}\n        id={format(date, \"yyyy-MM-dd\")}\n      >\n        <div className=\"content\">\n          <div className=\"day\">{dayConfig[date.getDay()]}</div>\n          <div className=\"date\">{date.getDate()}</div>\n        </div>\n        <Markers hasFinished={hasFinished} hasUnfinished={hasUnfinished}>\n          <div className=\"unfinished\"></div>\n          <div className=\"finished\"></div>\n        </Markers>\n      </CalendarItem>\n    );\n    date.setDate(date.getDate() + 1);\n  }\n  return (\n    <CalendarContainer ref={calendarRef}>\n      <span>Calendar</span>\n      <Carousel show={show}>{calendarItems}</Carousel>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: ${(props) => (props.isDanger ? \"red\" : \"orange\")};\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst Button = (props) => {\n  return (\n    <StyledButton isDanger={props.isDanger} onClick={props.onClick}>\n      {props.text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import firebase from \"firebase\";\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n  databaseURL: REACT_APP_DATABASE_URL,\n};\n// // Initialize Firebase\nconst firebase_app = firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst database = firebase_app.database();\nconst auth = firebase_app.auth();\n\n// if (window.location.hostname === \"localhost\") {\n//   // Point to the RTDB emulator running on localhost.\n//   database.useEmulator(\"localhost\", 9000);\n//   auth.useEmulator(\"localhost\", 9099);\n// }\n\nexport { database, auth };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: orange;\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n`;\n\nconst ButtonLink = (props) => {\n  return <StyledLink to={props.to}>{props.text}</StyledLink>;\n};\n\nexport default ButtonLink;\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport TaskList from \"../../components/TaskList\";\nimport Calendar from \"../../components/Calendar\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport ButtonLink from \"../../components/Link\";\n\nconst TodoListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HomePage = () => {\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n  //const [redirectTaskCreator, setRedirectTaskCreator] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [chosenDay, setChosenDay] = useState(\n    format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n\n  console.log(\"ALL USER DATA\", userData);\n\n  useEffect(() => {\n    console.log(\"EFFECT\");\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        let userTasksRef = database.ref(\"tasks/\" + user.uid);\n        userTasksRef\n          .get()\n          .then(function (snapshot) {\n            if (snapshot.exists()) {\n              console.log(snapshot.val());\n              let data = snapshot.val();\n              setUserData(data);\n            } else {\n              console.log(\"No data available\");\n            }\n          })\n          .catch(function (error) {\n            console.error(error);\n          });\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleLogOut = () => {\n    auth.signOut().then(() => {\n      setUserLoggedIn(false);\n    });\n  };\n\n  const handleUpdateStatus = (e) => {\n    let updatedTasks = userData[chosenDay];\n    updatedTasks[e.target.value].status = e.target.checked;\n    let updatedData = userData;\n    updatedData[chosenDay] = updatedTasks;\n    setUserData(updatedData);\n    let updates = {};\n    updates[\"/tasks/\" + auth.currentUser.uid + \"/\" + chosenDay] = updatedTasks;\n    database.ref().update(updates);\n    forceUpdate();\n  };\n\n  return (\n    <TodoListWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to={`/login`} />}\n      {/*redirectTaskCreator ? <Redirect to={`/create-task`} /> : \"\"*/}\n      <Calendar\n        chosenDay={chosenDay}\n        handleChoosingDay={(e) => {\n          setChosenDay(e.currentTarget.id);\n        }}\n        userData={userData}\n      ></Calendar>\n      <TaskList\n        tasks={userData[chosenDay] ? Object.entries(userData[chosenDay]) : []}\n        day={chosenDay}\n        handleUpdateStatus={handleUpdateStatus}\n      ></TaskList>\n      <ButtonWrapper>\n        <ButtonLink\n          to={{ pathname: \"/create-task\", state: { isUpdate: false } }}\n          text=\"+ Add new task\"\n        />\n        <Button onClick={handleLogOut} text={\"logout\"} />\n      </ButtonWrapper>\n    </TodoListWrapper>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  height: 30px;\n  border: 3px solid ${(props) => (props.isError ? \"red\" : \"orange\")};\n  border-radius: 10px;\n  width: 280px;\n  outline: none;\n`;\n\nconst TextInput = (props) => {\n  //console.log(props.value)\n  return (\n    <StyledInput\n      type={props.type}\n      placeholder={props.placeholder}\n      onChange={props.onChange}\n      value={props.value}\n      isError={props.isError}\n    ></StyledInput>\n  );\n};\n\nexport default TextInput;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { auth } from \"../../api/firebase\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleLogin = () => {\n    if (email === \"\" || password === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        console.log(userCredential.user);\n        setRedirect(true);\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/user-not-found\":\n            toast.error(\"User with this email not found\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/wrong-password\":\n            toast.error(\"Wrong password, try again\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n\n        console.log(error.code);\n        console.log(error.message);\n        // ..\n      });\n  };\n\n  console.log(isRedirect);\n  return (\n    <LoginWrapper>\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <span>Todo-List</span>\n      <LoginContainer>\n        <span>Please Login</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button onClick={handleLogin} text=\"Sign In\" />\n        <Link to=\"/register\">Dont have an account? Sign Up here!</Link>\n      </LoginContainer>\n      <ToastContainer />\n    </LoginWrapper>\n  );\n};\n\nexport default LoginPage;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst RegisterWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst RegisterContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst RegisterPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordComfirm, setPasswordConfirm] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleSignUp = () => {\n    if (email === \"\" || password === \"\" || passwordComfirm === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    } else if (password !== passwordComfirm) {\n      toast.error(\"Passwords should match\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let tasksRef = database.ref(`tasks/`);\n        let newUser = {};\n        newUser[`${userCredential.user.uid}`] = \"\";\n        console.log(newUser);\n        tasksRef.update(newUser).then(() => {\n          setRedirect(true);\n        });\n\n        console.log(userCredential.user);\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/weak-password\":\n            toast.error(\n              \"Password is too weak, it should be at least 6 characters\",\n              {\n                position: toast.POSITION.TOP_CENTER,\n                autoClose: 3500,\n              }\n            );\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n        console.log(error.code);\n        console.log(error.message);\n        // ..\n      });\n  };\n\n  return (\n    <RegisterWrapper>\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <span>Todo-List</span>\n      <RegisterContainer>\n        <span>Please Register</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <TextInput\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n          value={passwordComfirm}\n          type=\"password\"\n          placeholder=\"Comfirm password\"\n        />\n        <Button onClick={handleSignUp} text=\"Sign Up\" />\n        <Link to=\"/login\">Already have an account? Sign In here!</Link>\n      </RegisterContainer>\n      <ToastContainer />\n    </RegisterWrapper>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/textInput\";\nimport Calendar from \"../../components/Calendar\";\nimport { format } from \"date-fns\";\nimport { database, auth } from \"../../api/firebase\";\nimport ButtonLink from \"../../components/Link\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst TaskCreatorWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst TaskCreatorContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  & > * {\n    margin-bottom: 10px;\n  }\n\n  & > span {\n    font-size: 20px;\n  }\n`;\n\nconst StyledTextArea = styled.textarea`\n  border: 2px solid orange;\n  width: 280px;\n  height: 200px;\n`;\n\n// const ConfirmationDialog = () => {\n//   return (\n//     <div>\n//       <span>Do you want to delete this?</span>\n//       <button>Yes</button>\n//       <button>Yes</button>\n//     </div>\n//   );\n// }\n\nconst CreateTaskPage = (props) => {\n  console.log(props.location);\n  let {\n    isUpdate,\n    textName,\n    taskId,\n    taskDay,\n    taskDescription,\n  } = props.location.state;\n  const [chosenDay, setChosenDay] = useState(\n    taskDay || format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n  const [taskName, setTaskName] = useState(textName || \"\");\n  const [description, setDescription] = useState(taskDescription || \"\");\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [isRedirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleTaskSave = () => {\n    if (taskName === \"\") {\n      toast.error(\"Please enter your task\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    if (isUpdate) {\n      let userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n      );\n      let updatedTask = {\n        text: taskName,\n        status: false,\n        description: description,\n      };\n      userTasksRef.update(updatedTask).then(() => {\n        toast.success(\"Task successfully saved\", {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 3500,\n        });\n      });\n    } else {\n      let userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}`\n      );\n      let newTask = {\n        text: taskName,\n        status: false,\n        description: description,\n      };\n      userTasksRef.push(newTask).then(() => {\n        // toast.success(\"Task successfully saved\", {\n        //   position: toast.POSITION.TOP_CENTER,\n        //   autoClose: 3500,\n        // });\n        setRedirect(true);\n      });\n    }\n  };\n\n  const handleTaskDelete = () => {\n    // toast(<ConfirmationDialog/>, {\n    //   position: toast.POSITION.TOP_CENTER,\n    //   autoClose: false,\n    // })\n    let userTasksRef = database.ref(\n      `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n    );\n    userTasksRef.remove().then(() => {\n      // toast.success(\"Task successfully deleted\", {\n      //   position: toast.POSITION.TOP_CENTER,\n      //   autoClose: 3500,\n      // });\n      setRedirect(true);\n    });\n  };\n\n  return (\n    <TaskCreatorWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to={`/login`} />}\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <TaskCreatorContainer>\n        {isUpdate ? (\n          <span>Update your task!</span>\n        ) : (\n          <>\n            <span>Create your task!</span>\n            <span>Choose a day</span>\n            <Calendar\n              chosenDay={chosenDay}\n              handleChoosingDay={(e) => setChosenDay(e.currentTarget.id)}\n              userData={{}}\n            ></Calendar>\n          </>\n        )}\n        <TextInput\n          value={taskName}\n          onChange={(e) => setTaskName(e.target.value)}\n          placeholder=\"Write your task\"\n        ></TextInput>\n        <StyledTextArea\n          placeholder=\"Write your description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        ></StyledTextArea>\n        <Button\n          onClick={handleTaskSave}\n          text={isUpdate ? \"Update task\" : \"Create Task\"}\n        ></Button>\n        {isUpdate ? (\n          <Button\n            onClick={handleTaskDelete}\n            isDanger={true}\n            text={\"Delete task\"}\n          ></Button>\n        ) : (\n          \"\"\n        )}\n        <ButtonLink to=\"/home\" text=\"Go back\" />\n      </TaskCreatorContainer>\n      <ToastContainer />\n    </TaskCreatorWrapper>\n  );\n};\n\nexport default CreateTaskPage;\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"../features/HomePage\";\nimport LoginPage from \"../features/Login\";\nimport RegisterPage from \"../features/Register\";\nimport CreateTaskPage from \"../features/TaskCreator\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect from={\"/\"} to={`/home`} exact />\n        <Route path={`/home`}>\n          <HomePage />\n        </Route>\n        <Route path={`/login`}>\n          <LoginPage />\n        </Route>\n        <Route path={`/register`}>\n          <RegisterPage />\n        </Route>\n        <Route path={`/create-task`} component={CreateTaskPage}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}