{"version":3,"sources":["globalStyles.js","core/utils/constants.js","core/pages/HomePage/components/Checkbox/styles.js","core/pages/HomePage/components/Checkbox/index.js","core/pages/HomePage/components/Checkbox/Checkbox.js","core/pages/HomePage/components/TaskList/styles.js","core/pages/HomePage/components/TaskList/index.js","core/pages/HomePage/components/TaskList/TaskList.js","core/components/Carousel/styles.js","core/components/Carousel/index.js","core/components/Carousel/Carousel.js","core/components/Calendar/dayConfig.js","core/components/Calendar/monthConfig.js","core/components/Calendar/styles.js","core/components/Calendar/index.js","core/components/Calendar/Calendar.js","core/components/styled/Button.js","core/components/styled/ButtonLink.js","core/api/firebase.js","core/services/firebaseDBQueries.js","core/utils/errors.js","core/services/firebaseAuthQueries.js","core/pages/HomePage/reducers/UserDataReducer.js","core/pages/HomePage/styles.js","core/pages/HomePage/index.js","core/pages/HomePage/HomePage.js","core/components/styled/TextInput.js","core/services/showToast.js","core/pages/Login/styles.js","core/pages/Login/index.js","core/pages/Login/Login.js","core/pages/Register/styles.js","core/pages/Register/index.js","core/pages/Register/Register.js","core/pages/TaskCreator/styles.js","core/pages/TaskCreator/index.js","core/pages/TaskCreator/TaskCreator.js","app/App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","LINKS","ROOT","HOME","LOGIN","REGISTER","TASK","CheckboxContainer","styled","div","Icon","svg","StyledCheckbox","props","checked","Checkbox","onChange","value","onClick","id","viewBox","points","TaskListContainer","Task","StyledLink","Link","TaskList","tasks","day","handleUpdateStatus","taskList","useMemo","length","map","status","to","pathname","state","isUpdate","textName","text","taskId","taskDay","taskDescription","description","window","innerWidth","substring","className","CarouselContainer","CarouselWrapper","CarouselContentWrapper","CarouselContent","CarouselButton","button","CarouselButtonLeft","CarouselButtonRight","Carousel","children","show","setMaxElementsShown","maxElementsShown","useState","currentIndex","setCurrentIndex","setLength","useEffect","prevState","filter","index","dayConfig","monthConfig","CalendarContainer","CalendarItem","isChosen","Markers","hasFinished","hasUnfinished","Calendar","userData","chosenDay","handleChoosingDay","calendarRef","useRef","blockWidth","setBlockWidth","current","offsetWidth","Math","round","calendarItems","items","Array","fill","undefined","date","Date","now","item","setDate","getDate","format","Object","entries","forEach","getDay","getMonth","ref","Button","isDanger","ButtonLink","process","REACT_APP_FIREBASE_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","firebaseConfig","apiKey","authDomain","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","databaseURL","firebaseApp","firebase","initializeApp","database","auth","createUserFolder","uid","a","tasksRef","newUser","update","then","getUserData","route","userTasksRef","get","snapshot","exists","val","updateUserData","updatedData","updates","addUserData","newData","push","deleteUserData","remove","ERROR_MESSAGES","default","loginUser","email","password","signInWithEmailAndPassword","catch","error","code","registerUser","createUserWithEmailAndPassword","userCredential","user","logoutUser","signOut","getUserId","currentUser","userDataReducer","action","type","payload","Error","TodoListWrapper","ButtonWrapper","HomePage","useReducer","dispatch","setChosenDay","history","useHistory","onAuthStateChanged","queryResult","handleLogOut","e","currentTarget","updatedTasks","TextInput","input","isError","showErrorToast","toast","position","POSITION","TOP_CENTER","autoClose","ToastContainer","LoginWrapper","LoginContainer","LoginPage","setEmail","setPassword","handleLogin","target","placeholder","RegisterWrapper","RegisterContainer","RegisterPage","passwordComfirm","setPasswordConfirm","handleSignUp","registerResult","TaskCreatorWrapper","TaskCreatorContainer","StyledTextArea","textarea","TaskCreatorPage","location","taskName","setTaskName","setDescription","handleTaskSave","success","newTask","handleTaskDelete","maxLength","App","from","exact","path","component","TaskPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ffdd78.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\n\nexport default GlobalStyles;\n","const LINKS = {\r\n  ROOT: '/',\r\n  HOME: '/home',\r\n  LOGIN: '/login',\r\n  REGISTER: '/register',\r\n  TASK: '/task',\r\n};\r\n\r\nexport default LINKS;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`;\r\n\r\nexport const StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: ${(props) => (props.checked ? 'orange' : 'white')};\r\n  border-radius: 50%;\r\n  border: 2px solid orange;\r\n  transition: all 150ms;\r\n\r\n  ${Icon} {\r\n    visibility: ${(props) => (props.checked ? 'visible' : 'hidden')};\r\n  }\r\n`;\r\n","import Checkbox from './Checkbox';\n\nexport default Checkbox;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CheckboxContainer, StyledCheckbox, Icon } from './styles';\r\n\r\nconst Checkbox = ({ checked, onChange, value }) => (\r\n  <CheckboxContainer>\r\n    <StyledCheckbox checked={checked} onClick={onChange} id={value}>\r\n      <Icon viewBox=\"0 0 24 24\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n);\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Checkbox;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const TaskListContainer = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n   solid red;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > span {\r\n    align-self: flex-start;\r\n    margin-left: 50px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .placeholder {\r\n    font-weight: normal;\r\n    color: grey;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const Task = styled.div`\r\n  margin-left: 50px;\r\n  width: 80%;\r\n  height: 30px;\r\n   solid blue;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & > * {\r\n    margin-right: 20px;\r\n    height: 20px;\r\n  }\r\n  img {\r\n    justify-self: flex-end;\r\n    display: none;\r\n    cursor: pointer;\r\n  }\r\n  :hover {\r\n    img {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n","import TaskList from './TaskList';\n\nexport default TaskList;\n","import React, { useMemo } from 'react';\r\nimport LINKS from 'core/utils/constants';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from 'core/pages/HomePage/components/Checkbox';\r\nimport { TaskListContainer, StyledLink, Task } from './styles';\r\n\r\nconst TaskList = (props) => {\r\n  const { tasks, day, handleUpdateStatus } = props;\r\n\r\n  const generateTaskList = () => (tasks.length ? (\r\n    tasks.map((value) => (\r\n      <Task>\r\n        <Checkbox\r\n          checked={value[1].status}\r\n          onChange={handleUpdateStatus}\r\n          value={value[0]}\r\n        />\r\n        <StyledLink\r\n          to={{\r\n            pathname: LINKS.TASK,\r\n            state: {\r\n              isUpdate: true,\r\n              textName: value[1].text,\r\n              taskId: value[0],\r\n              taskDay: day,\r\n              taskDescription: value[1].description,\r\n            },\r\n          }}\r\n        >\r\n          <span>\r\n            {value[1].text.length > window.innerWidth / 15\r\n              ? `${value[1].text.substring(0, window.innerWidth / 15)}...`\r\n              : value[1].text}\r\n          </span>\r\n        </StyledLink>\r\n      </Task>\r\n    ))\r\n  ) : (\r\n    <span className=\"placeholder\">\r\n      You dont have any tasks for this day\r\n    </span>\r\n  ));\r\n\r\n  const taskList = useMemo(generateTaskList, [tasks]);\r\n\r\n  return (\r\n    <TaskListContainer>\r\n      <span>Tasks for this day</span>\r\n      {taskList}\r\n    </TaskListContainer>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  tasks: PropTypes.array.isRequired,\r\n  day: PropTypes.string.isRequired,\r\n  handleUpdateStatus: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskList;\r\n","import styled from 'styled-components';\r\n\r\nexport const CarouselContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CarouselWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CarouselContentWrapper = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CarouselContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  transition: all 250ms linear;\r\n  width: 100%;\r\n  -ms-overflow-style: none; /* hide scrollbar in IE and Edge */\r\n  scrollbar-width: none;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const CarouselButton = styled.button`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 38px;\r\n  height: 38px;\r\n  border: none;\r\n  background-color: Transparent;\r\n  cursor: pointer;\r\n  color: gray;\r\n  font-size: 30px;\r\n  outline: none;\r\n`;\r\n\r\nexport const CarouselButtonLeft = styled(CarouselButton)`\r\n  left: 8px;\r\n`;\r\n\r\nexport const CarouselButtonRight = styled(CarouselButton)`\r\n  right: 8px;\r\n`;\r\n","import Carousel from './Carousel';\n\nexport default Carousel;\n","import { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  CarouselWrapper,\r\n  CarouselContainer,\r\n  CarouselContentWrapper,\r\n  CarouselContent,\r\n  CarouselButtonLeft,\r\n  CarouselButtonRight,\r\n} from './styles';\r\n\r\nconst Carousel = (props) => {\r\n  const {\r\n    children, show, setMaxElementsShown, maxElementsShown,\r\n  } = props;\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [length, setLength] = useState(children.length);\r\n\r\n  useEffect(() => {\r\n    setLength(children.length);\r\n  }, [children]);\r\n\r\n  const next = () => {\r\n    if (currentIndex < length - show) {\r\n      setCurrentIndex((prevState) => prevState + show);\r\n    }\r\n    if (currentIndex >= length - show * 2) {\r\n      setMaxElementsShown(maxElementsShown + 30);\r\n    }\r\n  };\r\n\r\n  const prev = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex((prevState) => prevState - show);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselWrapper>\r\n        {currentIndex > 0 && (\r\n          <CarouselButtonLeft onClick={prev}>&lt;</CarouselButtonLeft>\r\n        )}\r\n\r\n        <CarouselContentWrapper>\r\n          <CarouselContent\r\n            // style={{ transform: `translateX(-${currentIndex * 100}%)` }}\r\n            show={show}\r\n          >\r\n            {children.filter((value, index) => {\r\n              if (index >= currentIndex && index < currentIndex + show) { return true; }\r\n              return false;\r\n            })}\r\n          </CarouselContent>\r\n        </CarouselContentWrapper>\r\n\r\n        {currentIndex < length - show && (\r\n          <CarouselButtonRight onClick={next}>&gt;</CarouselButtonRight>\r\n        )}\r\n      </CarouselWrapper>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nCarousel.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  show: PropTypes.number.isRequired,\r\n  maxElementsShown: PropTypes.number.isRequired,\r\n  setMaxElementsShown: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Carousel;\r\n","const dayConfig = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport default dayConfig;\n","const monthConfig = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport default monthConfig;\n","import styled from 'styled-components';\r\n\r\nexport const CalendarContainer = styled.div`\r\nmax-width: 768px;\r\nwidth: 100%;\r\nheight: 200px;\r\n solid red;\r\nmargin-bottom: 20px;\r\nmargin-top: 20px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-evenly;\r\n\r\n& > span {\r\n  margin-left: 50px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n`;\r\n\r\nexport const CalendarItem = styled.div`\r\n  width: 50px;\r\n  height: 90px;\r\n  margin: 10px;\r\n  .content {\r\n    height: 70px;\r\n    border: 2px solid ${(props) => (props.isChosen ? 'orange' : 'lightgray')};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n  }\r\n  .day,\r\n  .month {\r\n    color: ${(props) => (props.isChosen ? 'orange' : 'gray')};\r\n  }\r\n  .month {\r\n    font-size: 13px;\r\n  }\r\n  ${(props) => (props.isChosen ? 'color: orange;' : '')}\r\n`;\r\n\r\nexport const Markers = styled.div`\r\n  height: 20px;\r\n  width: 50px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  & > * {\r\n    width: 10px;\r\n    height: 10px;\r\n    border: 1px solid orange;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .finished {\r\n    background-color: orange;\r\n    display: ${(props) => (props.hasFinished ? 'block' : 'none')};\r\n  }\r\n\r\n  .unfinished {\r\n    display: ${(props) => (props.hasUnfinished ? 'block' : 'none')};\r\n  }\r\n`;\r\n","import Calendar from './Calendar';\n\nexport default Calendar;\n","import {\r\n  React, useEffect, useMemo, useRef, useState,\r\n} from 'react';\r\nimport { format } from 'date-fns';\r\nimport PropTypes from 'prop-types';\r\nimport Carousel from 'core/components/Carousel';\r\nimport dayConfig from './dayConfig';\r\nimport monthConfig from './monthConfig';\r\nimport { CalendarContainer, CalendarItem, Markers } from './styles';\r\n\r\nconst Calendar = (props) => {\r\n  const { userData, chosenDay, handleChoosingDay } = props;\r\n\r\n  const calendarRef = useRef();\r\n  const [blockWidth, setBlockWidth] = useState(768);\r\n  const [maxElementsShown, setMaxElementsShown] = useState(30);\r\n\r\n  useEffect(() => {\r\n    setBlockWidth(calendarRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  const show = Math.round(blockWidth / 100);\r\n\r\n  const generateCalendarItems = () => {\r\n    const items = new Array(maxElementsShown);\r\n    items.fill(undefined);\r\n\r\n    const date = new Date(Date.now());\r\n\r\n    let isChosen = false;\r\n\r\n    const calendarItems = items.map((item, index) => {\r\n      let hasFinished = false;\r\n      let hasUnfinished = false;\r\n\r\n      if (index > 0) {\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n\r\n      if (format(date, 'yyyy-MM-dd') === chosenDay) isChosen = true;\r\n      else isChosen = false;\r\n\r\n      if (userData && userData[format(date, 'yyyy-MM-dd')]) {\r\n        Object.entries(userData[format(date, 'yyyy-MM-dd')]).forEach(\r\n          (value) => {\r\n            if (value[1].status === true) hasFinished = true;\r\n            else if (value[1].status === false) hasUnfinished = true;\r\n          },\r\n        );\r\n      }\r\n\r\n      return (\r\n        <CalendarItem\r\n          onClick={handleChoosingDay}\r\n          isChosen={isChosen}\r\n          id={format(date, 'yyyy-MM-dd')}\r\n        >\r\n          <div className=\"content\">\r\n            <div className=\"day\">{dayConfig[date.getDay()]}</div>\r\n            <div className=\"month\">{monthConfig[date.getMonth()]}</div>\r\n            <div className=\"date\">{date.getDate()}</div>\r\n          </div>\r\n          <Markers hasFinished={hasFinished} hasUnfinished={hasUnfinished}>\r\n            <div className=\"unfinished\" />\r\n            <div className=\"finished\" />\r\n          </Markers>\r\n        </CalendarItem>\r\n      );\r\n    });\r\n\r\n    return calendarItems;\r\n  };\r\n\r\n  const calendarItems = useMemo(generateCalendarItems, [\r\n    maxElementsShown,\r\n    chosenDay,\r\n    userData,\r\n  ]);\r\n\r\n  return (\r\n    <CalendarContainer ref={calendarRef}>\r\n      <span>Calendar</span>\r\n      <Carousel\r\n        maxElementsShown={maxElementsShown}\r\n        setMaxElementsShown={setMaxElementsShown}\r\n        show={show}\r\n      >\r\n        {calendarItems}\r\n      </Carousel>\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nCalendar.propTypes = {\r\n  chosenDay: PropTypes.string.isRequired,\r\n  handleChoosingDay: PropTypes.func.isRequired,\r\n\r\n  // eslint-disable-next-line react/require-default-props\r\n  userData: PropTypes.object, // eslint-disable-line react/forbid-prop-types\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  max-width: 280px;\r\n  width: 40%;\r\n  height: 30px;\r\n  background-color: ${(props) => (props.isDanger ? 'red' : 'orange')};\r\n  border: 0;\r\n  border-radius: 10px;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ButtonLink = styled(Link)`\r\n  max-width: 280px;\r\n  width: 40%;\r\n  height: 30px;\r\n  background-color: orange;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default ButtonLink;\r\n","import firebase from 'firebase';\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n  databaseURL: REACT_APP_DATABASE_URL,\n};\n// // Initialize Firebase\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst database = firebaseApp.database();\nconst auth = firebaseApp.auth();\n\n// if (window.location.hostname === \"localhost\") {\n//   // Point to the RTDB emulator running on localhost.\n//   database.useEmulator(\"localhost\", 9000);\n//   auth.useEmulator(\"localhost\", 9099);\n// }\n\nexport { database, auth };\n","import { database } from 'core/api/firebase';\r\n\r\nexport const createUserFolder = async (uid) => {\r\n  const tasksRef = database.ref('tasks/');\r\n  const newUser = {};\r\n  newUser[`${uid}`] = '';\r\n  return tasksRef.update(newUser).then(() => true);\r\n};\r\n\r\nexport const getUserData = async (route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.get().then((snapshot) => {\r\n    if (snapshot.exists()) {\r\n      return snapshot.val();\r\n    }\r\n    const message = 'No data availible';\r\n    throw message;\r\n  });\r\n};\r\n\r\nexport const updateUserData = async (updatedData, route) => {\r\n  const updates = {};\r\n  updates[route] = updatedData;\r\n  return database\r\n    .ref()\r\n    .update(updates)\r\n    .then(() => true);\r\n};\r\n\r\nexport const addUserData = async (newData, route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.push(newData).then(() => true);\r\n};\r\n\r\nexport const deleteUserData = async (route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.remove().then(() => true);\r\n};\r\n","const ERROR_MESSAGES = {\r\n  'auth/invalid-email': 'Enter valid email please',\r\n  'auth/user-not-found': 'User with this email not found',\r\n  'auth/wrong-password': 'Wrong password, try again',\r\n  'auth/weak-password':\r\n    'Password is too weak, it should be at least 6 characters',\r\n  'auth/email-already-in-use': 'This email is already taken',\r\n  default: 'Something went wrong :C',\r\n};\r\n\r\nexport default ERROR_MESSAGES;\r\n","import { auth } from 'core/api/firebase';\r\nimport ERROR_MESSAGES from 'core/utils/errors';\r\n\r\nexport const loginUser = async (email, password) => auth\r\n  .signInWithEmailAndPassword(email, password)\r\n  .catch((error) => {\r\n    const message = ERROR_MESSAGES[error.code]\r\n      ? ERROR_MESSAGES[error.code]\r\n      : ERROR_MESSAGES.default;\r\n    throw message;\r\n  });\r\n\r\nexport const registerUser = async (email, password) => auth\r\n  .createUserWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    const data = userCredential.user.uid;\r\n    return data;\r\n  })\r\n  .catch((error) => {\r\n    const message = ERROR_MESSAGES[error.code]\r\n      ? ERROR_MESSAGES[error.code]\r\n      : ERROR_MESSAGES.default;\r\n    throw message;\r\n  });\r\n\r\nexport const isLoggedIn = async (/* statusHandler */) => {\r\n  // new Promise((resolve) => auth.onAuthStateChanged((user) => resolve(user)));\r\n  // return auth.onAuthStateChanged((user) => {\r\n  //   if (user) {\r\n  //     return user; //statusHandler(true);\r\n  //   } else statusHandler(false);\r\n  // });\r\n  // if (auth.currentUser) {\r\n  //   return true;\r\n  // } else {\r\n  //   return false;\r\n  // }\r\n};\r\n\r\nexport const logoutUser = async () => auth.signOut().then(() => true);\r\n\r\nexport const getUserId = () => auth.currentUser.uid;\r\n","const userDataReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return action.payload;\r\n    case 'update':\r\n      return { ...action.payload };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport default userDataReducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const TodoListWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React, {\r\n  useEffect, useReducer, useState,\r\n} from 'react';\r\nimport { format } from 'date-fns';\r\nimport TaskList from 'core/pages/HomePage/components/TaskList';\r\nimport Calendar from 'core/components/Calendar';\r\nimport Button from 'core/components/styled/Button';\r\nimport ButtonLink from 'core/components/styled/ButtonLink';\r\nimport { updateUserData, getUserData } from 'core/services/firebaseDBQueries';\r\nimport { auth } from 'core/api/firebase';\r\nimport { getUserId, logoutUser } from 'core/services/firebaseAuthQueries';\r\nimport LINKS from 'core/utils/constants';\r\nimport { useHistory } from 'react-router';\r\nimport userDataReducer from './reducers/UserDataReducer';\r\nimport { TodoListWrapper, ButtonWrapper } from './styles';\r\n\r\nconst HomePage = () => {\r\n  const [userData, dispatch] = useReducer(userDataReducer, {});\r\n  const [chosenDay, setChosenDay] = useState(\r\n    format(new Date(Date.now()), 'yyyy-MM-dd'),\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const queryResult = await getUserData(`tasks/${getUserId()}`);\r\n        if (queryResult) {\r\n          dispatch({ type: 'set', payload: queryResult });\r\n        }\r\n      } else {\r\n        history.push(LINKS.LOGIN);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleLogOut = async () => {\r\n    const queryResult = await logoutUser();\r\n    if (queryResult) {\r\n      history.push(LINKS.LOGIN);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = (e) => {\r\n    const updatedTasks = userData[chosenDay];\r\n    updatedTasks[e.currentTarget.id].status = !updatedTasks[e.currentTarget.id]\r\n      .status;\r\n    const updatedData = userData;\r\n    updatedData[chosenDay] = updatedTasks;\r\n    dispatch({ type: 'update', payload: updatedData });\r\n    const updates = {};\r\n    updates[`/tasks/${getUserId()}/${chosenDay}`] = updatedTasks;\r\n    updateUserData(updatedTasks, `/tasks/${getUserId()}/${chosenDay}`);\r\n  };\r\n\r\n  return (\r\n    <TodoListWrapper>\r\n      <Calendar\r\n        chosenDay={chosenDay}\r\n        handleChoosingDay={\r\n          (e) => {\r\n            setChosenDay(e.currentTarget.id);\r\n          }\r\n        }\r\n        userData={userData}\r\n      />\r\n      <TaskList\r\n        tasks={userData[chosenDay] ? Object.entries(userData[chosenDay]) : []}\r\n        day={chosenDay}\r\n        handleUpdateStatus={handleUpdateStatus}\r\n      />\r\n      <ButtonWrapper>\r\n        <ButtonLink\r\n          to={{ pathname: LINKS.TASK, state: { isUpdate: false } }}\r\n        >\r\n          Add new task\r\n        </ButtonLink>\r\n        <Button onClick={handleLogOut}>Log Out</Button>\r\n      </ButtonWrapper>\r\n    </TodoListWrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components';\r\n\r\nconst TextInput = styled.input`\r\n  font-family: inherit;\r\n  height: 30px;\r\n  border: 3px solid ${(props) => (props.isError ? 'red' : 'orange')};\r\n  border-radius: 10px;\r\n  width: 280px;\r\n  outline: none;\r\n`;\r\n\r\nexport default TextInput;\r\n","import { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const showErrorToast = (text) => {\r\n  toast.error(text, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    autoClose: 3500,\r\n  });\r\n};\r\n\r\nexport const showSuccessToast = (text) => {\r\n  toast.success(text, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    autoClose: 3500,\r\n  });\r\n};\r\n\r\nexport default ToastContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoginWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  font-family: \"Rowdies\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: orange;\r\n  & > span {\r\n    color: white;\r\n    font-size: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const LoginContainer = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  justify-content: space-evenly;\r\n`;\r\n","import LoginPage from './Login';\n\nexport default LoginPage;\n","import { React, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport TextInput from 'core/components/styled/TextInput';\r\nimport Button from 'core/components/styled/Button';\r\nimport { loginUser } from 'core/services/firebaseAuthQueries';\r\nimport ToastContainer, { showErrorToast } from 'core/services/showToast';\r\nimport LINKS from 'core/utils/constants';\r\nimport { LoginWrapper, LoginContainer } from './styles';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async () => {\r\n    if (email === '' || password === '') {\r\n      showErrorToast('Fill all fields please');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await loginUser(email, password);\r\n      history.push(LINKS.HOME);\r\n    } catch (e) {\r\n      showErrorToast(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <span>Todo-List</span>\r\n      <LoginContainer>\r\n        <span>Please Login</span>\r\n        <TextInput\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          type=\"text\"\r\n          placeholder=\"E-mail\"\r\n        />\r\n        <TextInput\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button onClick={handleLogin}>Sign In</Button>\r\n        <Link to=\"/register\">Dont have an account? Sign Up here!</Link>\r\n      </LoginContainer>\r\n      <ToastContainer />\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const RegisterWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  font-family: \"Rowdies\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: orange;\r\n  & > span {\r\n    color: white;\r\n    font-size: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const RegisterContainer = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  justify-content: space-evenly;\r\n`;\r\n","import RegisterPage from './Register';\n\nexport default RegisterPage;\n","import { React, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport TextInput from 'core/components/styled/TextInput';\r\nimport Button from 'core/components/styled/Button';\r\nimport ToastContainer, { showErrorToast } from 'core/services/showToast';\r\nimport { registerUser } from 'core/services/firebaseAuthQueries';\r\nimport { createUserFolder } from 'core/services/firebaseDBQueries';\r\nimport LINKS from 'core/utils/constants';\r\nimport { RegisterWrapper, RegisterContainer } from './styles';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordComfirm, setPasswordConfirm] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSignUp = async () => {\r\n    if (email === '' || password === '' || passwordComfirm === '') {\r\n      showErrorToast('Fill all fields please');\r\n      return;\r\n    }\r\n    if (password !== passwordComfirm) {\r\n      showErrorToast('Passwords should match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const registerResult = await registerUser(email, password);\r\n      await createUserFolder(registerResult);\r\n      history.push(LINKS.HOME);\r\n    } catch (e) {\r\n      showErrorToast(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RegisterWrapper>\r\n      <span>Todo-List</span>\r\n      <RegisterContainer>\r\n        <span>Please Register</span>\r\n        <TextInput\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          type=\"text\"\r\n          placeholder=\"E-mail\"\r\n        />\r\n        <TextInput\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <TextInput\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          value={passwordComfirm}\r\n          type=\"password\"\r\n          placeholder=\"Comfirm password\"\r\n        />\r\n        <Button onClick={handleSignUp}>Sign Up</Button>\r\n        <Link to=\"/login\">Already have an account? Sign In here!</Link>\r\n      </RegisterContainer>\r\n      <ToastContainer />\r\n    </RegisterWrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const TaskCreatorWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const TaskCreatorContainer = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  & > * {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  & > span {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledTextArea = styled.textarea`\r\n  border: 2px solid orange;\r\n  width: 280px;\r\n  height: 200px;\r\n`;\r\n","import TaskCreatorPage from './TaskCreator';\n\nexport default TaskCreatorPage;\n","import React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Button from 'core/components/styled/Button';\r\nimport TextInput from 'core/components/styled/TextInput';\r\nimport Calendar from 'core/components/Calendar';\r\nimport ButtonLink from 'core/components/styled/ButtonLink';\r\nimport ToastContainer, {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from 'core/services/showToast';\r\nimport {\r\n  updateUserData,\r\n  addUserData,\r\n  deleteUserData,\r\n} from 'core/services/firebaseDBQueries';\r\nimport { getUserId } from 'core/services/firebaseAuthQueries';\r\nimport { auth } from 'core/api/firebase';\r\nimport LINKS from 'core/utils/constants';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  TaskCreatorContainer,\r\n  TaskCreatorWrapper,\r\n  StyledTextArea,\r\n} from './styles';\r\n\r\nconst TaskPage = (props) => {\r\n  const { location } = props;\r\n  const {\r\n    isUpdate,\r\n    textName,\r\n    taskId,\r\n    taskDay,\r\n    taskDescription,\r\n  } = location.state;\r\n\r\n  const [chosenDay, setChosenDay] = useState(\r\n    taskDay || format(new Date(Date.now()), 'yyyy-MM-dd'),\r\n  );\r\n  const [taskName, setTaskName] = useState(textName || '');\r\n  const [description, setDescription] = useState(taskDescription || '');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        history.push(LINKS.LOGIN);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTaskSave = async () => {\r\n    if (taskName === '') {\r\n      showErrorToast('Please enter your task');\r\n      return;\r\n    }\r\n\r\n    if (isUpdate) {\r\n      const updatedTask = {\r\n        text: taskName,\r\n        status: false,\r\n        description,\r\n      };\r\n\r\n      const queryResult = updateUserData(\r\n        updatedTask,\r\n        `tasks/${getUserId()}/${chosenDay}/${taskId}`,\r\n      );\r\n      if (queryResult) {\r\n        showSuccessToast('Task successfully saved');\r\n      }\r\n    } else {\r\n      const newTask = {\r\n        text: taskName,\r\n        status: false,\r\n        description,\r\n      };\r\n      const queryResult = await addUserData(\r\n        newTask,\r\n        `tasks/${getUserId()}/${chosenDay}`,\r\n      );\r\n      if (queryResult) {\r\n        history.push(LINKS.HOME);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTaskDelete = async () => {\r\n    const queryResult = await deleteUserData(\r\n      `tasks/${getUserId()}/${chosenDay}/${taskId}`,\r\n    );\r\n    if (queryResult) history.push(LINKS.HOME);\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorWrapper>\r\n      <TaskCreatorContainer>\r\n        {isUpdate ? (\r\n          <>\r\n            <span>Update your task!</span>\r\n            <span>\r\n              This task is assigned on\r\n              {' '}\r\n              {chosenDay}\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>Create your task!</span>\r\n            <span>Choose a day</span>\r\n            <Calendar\r\n              chosenDay={chosenDay}\r\n              handleChoosingDay={\r\n                (e) => setChosenDay(e.currentTarget.id)\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n        <TextInput\r\n          type=\"text\"\r\n          value={taskName}\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n          placeholder=\"Write your task (50 symbols max)\"\r\n          maxLength={50}\r\n        />\r\n        <StyledTextArea\r\n          placeholder=\"Write your description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Button\r\n          onClick={handleTaskSave}\r\n\r\n        >\r\n          {isUpdate ? 'Update task' : 'Create Task'}\r\n\r\n        </Button>\r\n        {isUpdate ? (\r\n          <Button onClick={handleTaskDelete} isDanger>Delete task</Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <ButtonLink to={LINKS.HOME}>Go back</ButtonLink>\r\n      </TaskCreatorContainer>\r\n      <ToastContainer />\r\n    </TaskCreatorWrapper>\r\n  );\r\n};\r\n\r\nTaskPage.propTypes = {\r\n  location: PropTypes.shape({\r\n    state: {\r\n      isUpdate: PropTypes.bool.isRequired,\r\n      textName: PropTypes.string,\r\n      taskId: PropTypes.string,\r\n      taskDay: PropTypes.string,\r\n      taskDescription: PropTypes.string,\r\n    },\r\n  }).isRequired,\r\n};\r\n\r\nexport default TaskPage;\r\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport React from 'react';\nimport HomePage from 'core/pages/HomePage';\nimport LoginPage from 'core/pages/Login';\nimport RegisterPage from 'core/pages/Register';\nimport TaskPage from 'core/pages/TaskCreator';\nimport LINKS from 'core/utils/constants';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect from={LINKS.ROOT} to={LINKS.HOME} exact />\n        <Route path={LINKS.HOME}>\n          <HomePage />\n        </Route>\n        <Route path={LINKS.LOGIN}>\n          <LoginPage />\n        </Route>\n        <Route path={LINKS.REGISTER}>\n          <RegisterPage />\n        </Route>\n        <Route path={LINKS.TASK} component={TaskPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyles from './globalStyles';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}