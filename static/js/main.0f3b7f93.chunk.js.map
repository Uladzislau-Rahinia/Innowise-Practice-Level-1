{"version":3,"sources":["components/Checkbox/styles.js","components/Checkbox/index.js","components/Checkbox/Checkbox.js","components/TaskList/styles.js","utils/constants.js","components/TaskList/index.js","components/TaskList/TaskList.js","components/Calendar/dayConfig.js","components/Calendar/monthConfig.js","components/Carousel/styles.js","components/Carousel/index.js","components/Carousel/Carousel.js","components/Calendar/styles.js","components/Calendar/index.js","components/Calendar/Calendar.js","components/Button/styles.js","components/Button/Button.js","components/Link/styles.js","components/Link/index.js","components/Link/Link.js","pages/HomePage/styles.js","api/firebase.js","services/firebaseDBQueries.js","utils/errors.js","services/firebaseAuthQueries.js","pages/HomePage/reducers/UserDataReducer.js","services/redirect.js","pages/HomePage/index.js","pages/HomePage/HomePage.js","components/textInput/styles.js","components/textInput/TextInput.js","components/textInput/index.js","components/Button/index.js","pages/Login/styles.js","services/showToast.js","pages/Login/index.js","pages/Login/Login.js","pages/Register/styles.js","pages/Register/index.js","pages/Register/Register.js","pages/TaskCreator/styles.js","pages/TaskCreator/index.js","pages/TaskCreator/TaskCreator.js","app/App.js","reportWebVitals.js","index.js"],"names":["CheckboxContainer","styled","div","Icon","svg","StyledCheckbox","props","checked","Checkbox","onChange","value","onClick","id","viewBox","points","TaskListContainer","Task","StyledLink","Link","LINKS","TaskList","tasks","length","map","index","status","handleUpdateStatus","to","pathname","state","isUpdate","textName","text","taskId","taskDay","day","taskDescription","description","window","innerWidth","substring","className","dayConfig","0","1","2","3","4","5","6","monthConfig","7","8","9","10","11","CarouselContainer","CarouselWrapper","CarouselContentWrapper","CarouselContent","CarouselButton","button","CarouselButtonLeft","CarouselButtonRight","Carousel","children","show","setMaxElementsShown","maxElementsShown","useState","currentIndex","setCurrentIndex","setLength","useEffect","prevState","CalendarContainer","CalendarItem","isChosen","Markers","hasFinished","hasUnfinished","Calendar","calendarRef","useRef","blockWidth","setBlockWidth","current","offsetWidth","Math","round","calendarItems","useMemo","date","Date","now","i","format","chosenDay","userData","Object","entries","find","push","handleChoosingDay","getDay","getMonth","getDate","setDate","ref","StyledButton","isDanger","Button","ButtonLink","TodoListWrapper","ButtonWrapper","process","REACT_APP_FIREBASE_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","firebaseConfig","apiKey","authDomain","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","databaseURL","firebase_app","firebase","initializeApp","database","auth","CreateUserFolder","uid","a","tasksRef","newUser","update","then","GetUserData","route","userTasksRef","get","snapshot","exists","val","UpdateUserData","updatedData","updates","AddUserData","newData","DeleteUserData","remove","ERROR_MESSAGES","default","LoginUser","email","password","result","signInWithEmailAndPassword","isSuccessful","catch","error","message","code","RegisterUser","createUserWithEmailAndPassword","userCredential","data","user","LogoutUser","signOut","GetUserId","currentUser","userDataReducer","action","type","payload","Error","RedirectWrapper","isRedirect","HomePage","isUserLoggedIn","setUserLoggedIn","useReducer","dispatch","setChosenDay","onAuthStateChanged","queryResult","handleLogOut","useCallback","e","currentTarget","updatedTasks","StyledInput","input","isError","TextInput","placeholder","maxLength","LoginWrapper","LoginContainer","showErrorToast","toast","position","POSITION","TOP_CENTER","autoClose","ToastContainer","LoginPage","setEmail","setPassword","setRedirect","handleLogin","loginResult","target","RegisterWrapper","RegisterContainer","RegisterPage","passwordComfirm","setPasswordConfirm","handleSignUp","registerResult","TaskCreatorWrapper","TaskCreatorContainer","StyledTextArea","textarea","TaskCreatorPage","location","taskName","setTaskName","setDescription","handleTaskSave","success","newTask","handleTaskDelete","App","from","exact","path","component","TaskPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f3b7f93.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`;\r\n\r\nexport const StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: ${(props) => (props.checked ? \"orange\" : \"white\")};\r\n  border-radius: 50%;\r\n  border: 2px solid orange;\r\n  transition: all 150ms;\r\n\r\n  ${Icon} {\r\n    visibility: ${(props) => (props.checked ? \"visible\" : \"hidden\")};\r\n  }\r\n`;\r\n","import Checkbox from \"./Checkbox\";\nexport default Checkbox;\n","import React from \"react\";\r\nimport { CheckboxContainer, StyledCheckbox, Icon } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Checkbox = ({ checked, onChange, value }) => (\r\n  <CheckboxContainer>\r\n    <StyledCheckbox checked={checked} onClick={onChange} id={value}>\r\n      <Icon viewBox=\"0 0 24 24\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n);\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.any,\r\n};\r\n\r\nexport default Checkbox;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const TaskListContainer = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n   solid red;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > span {\r\n    align-self: flex-start;\r\n    margin-left: 50px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .placeholder {\r\n    font-weight: normal;\r\n    color: grey;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const Task = styled.div`\r\n  margin-left: 50px;\r\n  width: 80%;\r\n  height: 30px;\r\n   solid blue;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & > * {\r\n    margin-right: 20px;\r\n    height: 20px;\r\n  }\r\n  img {\r\n    justify-self: flex-end;\r\n    display: none;\r\n    cursor: pointer;\r\n  }\r\n  :hover {\r\n    img {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n","export const LINKS = {\r\n  ROOT: \"/\",\r\n  HOME: \"/home\",\r\n  LOGIN: \"/login\",\r\n  REGISTER: \"/register\",\r\n  TASK: \"/task\",\r\n};\r\n","import TaskList from \"./TaskList\";\nexport default TaskList;\n","import React from \"react\";\r\nimport Checkbox from \"../Checkbox\";\r\nimport { TaskListContainer, StyledLink, Task } from \"./styles\";\r\nimport { LINKS } from \"utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TaskList = (props) => {\r\n  return (\r\n    <TaskListContainer>\r\n      <span>Tasks for this day</span>\r\n      {props.tasks.length ? (\r\n        props.tasks.map((value, index) => {\r\n          return (\r\n            <Task key={index}>\r\n              <Checkbox\r\n                checked={value[1].status}\r\n                onChange={props.handleUpdateStatus}\r\n                value={value[0]}\r\n              />\r\n              <StyledLink\r\n                to={{\r\n                  pathname: LINKS.TASK,\r\n                  state: {\r\n                    isUpdate: true,\r\n                    textName: value[1].text,\r\n                    taskId: value[0],\r\n                    taskDay: props.day,\r\n                    taskDescription: value[1].description,\r\n                  },\r\n                }}\r\n              >\r\n                <span>\r\n                  {value[1].text.length > window.innerWidth / 15\r\n                    ? value[1].text.substring(0, window.innerWidth / 15) + \"...\"\r\n                    : value[1].text}\r\n                </span>\r\n              </StyledLink>\r\n            </Task>\r\n          );\r\n        })\r\n      ) : (\r\n        <span className=\"placeholder\">\r\n          You dont have any tasks for this day\r\n        </span>\r\n      )}\r\n    </TaskListContainer>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  day: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskList;\r\n","const dayConfig = {\n  0: \"Sun\",\n  1: \"Mon\",\n  2: \"Tue\",\n  3: \"Wed\",\n  4: \"Thu\",\n  5: \"Fri\",\n  6: \"Sat\",\n};\n\nexport default dayConfig;\n","const monthConfig = {\n  0: \"Jan\",\n  1: \"Feb\",\n  2: \"Mar\",\n  3: \"Apr\",\n  4: \"May\",\n  5: \"Jun\",\n  6: \"Jul\",\n  7: \"Aug\",\n  8: \"Sep\",\n  9: \"Oct\",\n  10: \"Nov\",\n  11: \"Dec\",\n};\n\nexport default monthConfig;\n","import styled from \"styled-components\";\r\n\r\nexport const CarouselContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CarouselWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CarouselContentWrapper = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CarouselContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  transition: all 250ms linear;\r\n  width: 100%;\r\n  -ms-overflow-style: none; /* hide scrollbar in IE and Edge */\r\n  scrollbar-width: none;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const CarouselButton = styled.button`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 38px;\r\n  height: 38px;\r\n  border: none;\r\n  background-color: Transparent;\r\n  cursor: pointer;\r\n  color: gray;\r\n  font-size: 30px;\r\n  outline: none;\r\n`;\r\n\r\nexport const CarouselButtonLeft = styled(CarouselButton)`\r\n  left: 8px;\r\n`;\r\n\r\nexport const CarouselButtonRight = styled(CarouselButton)`\r\n  right: 8px;\r\n`;\r\n","import Carousel from \"./Carousel\";\nexport default Carousel;\n","import { React, useState, useEffect } from \"react\";\r\nimport {\r\n  CarouselWrapper,\r\n  CarouselContainer,\r\n  CarouselContentWrapper,\r\n  CarouselContent,\r\n  CarouselButtonLeft,\r\n  CarouselButtonRight,\r\n} from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Carousel = (props) => {\r\n  const { children, show, setMaxElementsShown, maxElementsShown } = props;\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [length, setLength] = useState(children.length);\r\n\r\n  useEffect(() => {\r\n    setLength(children.length);\r\n  }, [children]);\r\n\r\n  const next = () => {\r\n    if (currentIndex < length - show) {\r\n      setCurrentIndex((prevState) => prevState + show);\r\n    }\r\n    if (currentIndex >= length - show * 2) {\r\n      setMaxElementsShown(maxElementsShown + 30);\r\n    }\r\n  };\r\n\r\n  const prev = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex((prevState) => prevState - show);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselWrapper>\r\n        {currentIndex > 0 && (\r\n          <CarouselButtonLeft onClick={prev}>&lt;</CarouselButtonLeft>\r\n        )}\r\n\r\n        <CarouselContentWrapper>\r\n          <CarouselContent\r\n            // style={{ transform: `translateX(-${currentIndex * 100}%)` }}\r\n            show={props.show}\r\n          >\r\n            {children.map((value, index) => {\r\n              if (index >= currentIndex && index < currentIndex + show)\r\n                return value;\r\n            })}\r\n          </CarouselContent>\r\n        </CarouselContentWrapper>\r\n\r\n        {currentIndex < length - show && (\r\n          <CarouselButtonRight onClick={next}>&gt;</CarouselButtonRight>\r\n        )}\r\n      </CarouselWrapper>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nCarousel.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  show: PropTypes.number.isRequired,\r\n  maxElementsShown: PropTypes.number.isRequired,\r\n  setMaxElementsShown: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Carousel;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CalendarContainer = styled.div`\r\nmax-width: 768px;\r\nwidth: 100%;\r\nheight: 200px;\r\n solid red;\r\nmargin-bottom: 20px;\r\nmargin-top: 20px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-evenly;\r\n\r\n& > span {\r\n  margin-left: 50px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n`;\r\n\r\nexport const CalendarItem = styled.div`\r\n  width: 50px;\r\n  height: 90px;\r\n  margin: 10px;\r\n  .content {\r\n    height: 70px;\r\n    border: 2px solid ${(props) => (props.isChosen ? \"orange\" : \"lightgray\")};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n  }\r\n  .day,\r\n  .month {\r\n    color: ${(props) => (props.isChosen ? \"orange\" : \"gray\")};\r\n  }\r\n  .month {\r\n    font-size: 13px;\r\n  }\r\n  ${(props) => (props.isChosen ? \"color: orange;\" : \"\")}\r\n`;\r\n\r\nexport const Markers = styled.div`\r\n  height: 20px;\r\n  width: 50px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  & > * {\r\n    width: 10px;\r\n    height: 10px;\r\n    border: 1px solid orange;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .finished {\r\n    background-color: orange;\r\n    display: ${(props) => (props.hasFinished ? \"block\" : \"none\")};\r\n  }\r\n\r\n  .unfinished {\r\n    display: ${(props) => (props.hasUnfinished ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n","import Calendar from \"./Calendar\";\nexport default Calendar;\n","import { React, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport dayConfig from \"./dayConfig\";\r\nimport monthConfig from \"./monthConfig\";\r\nimport Carousel from \"../Carousel\";\r\nimport { CalendarContainer, CalendarItem, Markers } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Calendar = (props) => {\r\n  const calendarRef = useRef();\r\n  const [blockWidth, setBlockWidth] = useState(768);\r\n  const [maxElementsShown, setMaxElementsShown] = useState(30);\r\n\r\n  useEffect(() => {\r\n    setBlockWidth(calendarRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  const show = Math.round(blockWidth / 100);\r\n\r\n  const generateCalendarItems = () => {\r\n    const calendarItems = [];\r\n    const date = new Date(Date.now());\r\n\r\n    let isChosen = false;\r\n\r\n    for (let i = 0; i < maxElementsShown; i++) {\r\n      let hasFinished = false;\r\n      let hasUnfinished = false;\r\n\r\n      if (format(date, \"yyyy-MM-dd\") === props.chosenDay) isChosen = true;\r\n      else isChosen = false;\r\n\r\n      if (props.userData && props.userData[format(date, \"yyyy-MM-dd\")]) {\r\n        Object.entries(props.userData[format(date, \"yyyy-MM-dd\")]).find(\r\n          (value) => {\r\n            if (value[1].status === true) hasFinished = true;\r\n            else if (value[1].status === false) hasUnfinished = true;\r\n          }\r\n        );\r\n      }\r\n\r\n      calendarItems.push(\r\n        <CalendarItem\r\n          onClick={props.handleChoosingDay}\r\n          isChosen={isChosen}\r\n          id={format(date, \"yyyy-MM-dd\")}\r\n        >\r\n          <div className=\"content\">\r\n            <div className=\"day\">{dayConfig[date.getDay()]}</div>\r\n            <div className=\"month\">{monthConfig[date.getMonth()]}</div>\r\n            <div className=\"date\">{date.getDate()}</div>\r\n          </div>\r\n          <Markers hasFinished={hasFinished} hasUnfinished={hasUnfinished}>\r\n            <div className=\"unfinished\" />\r\n            <div className=\"finished\" />\r\n          </Markers>\r\n        </CalendarItem>\r\n      );\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return calendarItems;\r\n  };\r\n\r\n  const calendarItems = useMemo(generateCalendarItems, [\r\n    maxElementsShown,\r\n    props.chosenDay,\r\n    props.userData,\r\n  ]);\r\n\r\n  return (\r\n    <CalendarContainer ref={calendarRef}>\r\n      <span>Calendar</span>\r\n      <Carousel\r\n        maxElementsShown={maxElementsShown}\r\n        setMaxElementsShown={setMaxElementsShown}\r\n        show={show}\r\n      >\r\n        {calendarItems}\r\n      </Carousel>\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nCalendar.propTypes = {\r\n  chosenDay: PropTypes.string.isRequired,\r\n  handleChoosingDay: PropTypes.func.isRequired,\r\n  userData: PropTypes.object,\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  max-width: 280px;\r\n  width: 40%;\r\n  height: 30px;\r\n  background-color: ${(props) => (props.isDanger ? \"red\" : \"orange\")};\r\n  border: 0;\r\n  border-radius: 10px;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <StyledButton isDanger={props.isDanger} onClick={props.onClick}>\r\n    {props.text}\r\n  </StyledButton>\r\n);\r\n\r\nButton.propTypes = {\r\n  isDanger: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  max-width: 280px;\r\n  width: 40%;\r\n  height: 30px;\r\n  background-color: orange;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n`;\r\n","import ButtonLink from \"./Link\";\nexport default ButtonLink;\n","import React from \"react\";\r\nimport { StyledLink } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonLink = (props) => (\r\n  <StyledLink to={props.to}>{props.text}</StyledLink>\r\n);\r\n\r\nButtonLink.propTypes = {\r\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default ButtonLink;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TodoListWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n","import firebase from \"firebase\";\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env; // eslint-disable-line no-undef\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n  databaseURL: REACT_APP_DATABASE_URL,\n};\n// // Initialize Firebase\nconst firebase_app = firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst database = firebase_app.database();\nconst auth = firebase_app.auth();\n\n// if (window.location.hostname === \"localhost\") {\n//   // Point to the RTDB emulator running on localhost.\n//   database.useEmulator(\"localhost\", 9000);\n//   auth.useEmulator(\"localhost\", 9099);\n// }\n\nexport { database, auth };\n","import { database } from \"api/firebase\";\r\n\r\nexport const CreateUserFolder = async (uid) => {\r\n  const tasksRef = database.ref(`tasks/`);\r\n  const newUser = {};\r\n  newUser[`${uid}`] = \"\";\r\n  return tasksRef.update(newUser).then(() => {\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const GetUserData = async (route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.get().then((snapshot) => {\r\n    if (snapshot.exists()) {\r\n      return snapshot.val();\r\n    }\r\n  });\r\n};\r\n\r\nexport const UpdateUserData = async (updatedData, route) => {\r\n  const updates = {};\r\n  updates[route] = updatedData;\r\n  return database\r\n    .ref()\r\n    .update(updates)\r\n    .then(() => {\r\n      return true;\r\n    });\r\n};\r\n\r\nexport const AddUserData = async (newData, route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.push(newData).then(() => {\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const DeleteUserData = async (route) => {\r\n  const userTasksRef = database.ref(route);\r\n  return userTasksRef.remove().then(() => {\r\n    return true;\r\n  });\r\n};\r\n","export const ERROR_MESSAGES = {\r\n  \"auth/invalid-email\": \"Enter valid email please\",\r\n  \"auth/user-not-found\": \"User with this email not found\",\r\n  \"auth/wrong-password\": \"Wrong password, try again\",\r\n  \"auth/weak-password\":\r\n    \"Password is too weak, it should be at least 6 characters\",\r\n  \"auth/email-already-in-use\": \"This email is already taken\",\r\n  default: \"Something went wrong :C\",\r\n};\r\n","import { auth } from \"api/firebase\";\r\nimport { ERROR_MESSAGES } from \"utils/errors\";\r\n\r\nexport const LoginUser = async (email, password) => {\r\n  let result = {};\r\n  return auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      result.isSuccessful = true;\r\n      return result;\r\n    })\r\n    .catch((error) => {\r\n      result.isSuccessful = false;\r\n      result.message = ERROR_MESSAGES[error.code]\r\n        ? ERROR_MESSAGES[error.code]\r\n        : ERROR_MESSAGES.default;\r\n      return result;\r\n    });\r\n};\r\n\r\nexport const RegisterUser = async (email, password) => {\r\n  let result = {};\r\n  return auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      result.isSuccessful = true;\r\n      result.data = userCredential.user.uid;\r\n      return result;\r\n    })\r\n    .catch((error) => {\r\n      result.isSuccessful = false;\r\n      result.message = ERROR_MESSAGES[error.code]\r\n        ? ERROR_MESSAGES[error.code]\r\n        : ERROR_MESSAGES.default;\r\n      return result;\r\n    });\r\n};\r\n\r\nexport const IsLoggedIn = async (/*statusHandler*/) => {\r\n  //new Promise((resolve) => auth.onAuthStateChanged((user) => resolve(user)));\r\n  // return auth.onAuthStateChanged((user) => {\r\n  //   if (user) {\r\n  //     return user; //statusHandler(true);\r\n  //   } else statusHandler(false);\r\n  // });\r\n  // if (auth.currentUser) {\r\n  //   return true;\r\n  // } else {\r\n  //   return false;\r\n  // }\r\n};\r\n\r\nexport const LogoutUser = async () => {\r\n  return auth.signOut().then(() => {\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const GetUserId = () => {\r\n  return auth.currentUser.uid;\r\n};\r\n","const userDataReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set\":\r\n      return action.payload;\r\n    case \"update\":\r\n      return { ...action.payload };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport default userDataReducer;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RedirectWrapper = (props) => {\r\n  const { isRedirect } = props;\r\n  return isRedirect ? <Redirect {...props} /> : \"\";\r\n};\r\n\r\nRedirectWrapper.propTypes = {\r\n  isRedirect: PropTypes.bool.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RedirectWrapper;\r\n","import HomePage from \"./HomePage\";\nexport default HomePage;\n","import React, { useCallback, useEffect, useReducer, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport TaskList from \"components/TaskList\";\r\nimport Calendar from \"components/Calendar\";\r\nimport Button from \"components/Button/Button\";\r\nimport ButtonLink from \"components/Link/\";\r\nimport { TodoListWrapper, ButtonWrapper } from \"./styles\";\r\nimport { UpdateUserData, GetUserData } from \"services/firebaseDBQueries\";\r\nimport { auth } from \"api/firebase\";\r\nimport { GetUserId, LogoutUser } from \"services/firebaseAuthQueries\";\r\nimport userDataReducer from \"./reducers/UserDataReducer\";\r\nimport RedirectWrapper from \"services/redirect\";\r\nimport { LINKS } from \"utils/constants\";\r\n\r\nconst HomePage = () => {\r\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\r\n  const [userData, dispatch] = useReducer(userDataReducer, {});\r\n  const [chosenDay, setChosenDay] = useState(\r\n    format(new Date(Date.now()), \"yyyy-MM-dd\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        let queryResult = await GetUserData(`tasks/${GetUserId()}`);\r\n        if (queryResult) {\r\n          dispatch({ type: \"set\", payload: queryResult });\r\n        }\r\n        setUserLoggedIn(true);\r\n      } else {\r\n        setUserLoggedIn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleLogOut = async () => {\r\n    let queryResult = await LogoutUser();\r\n    if (queryResult) {\r\n      setUserLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = (e) => {\r\n    const updatedTasks = userData[chosenDay];\r\n    updatedTasks[e.currentTarget.id].status = !updatedTasks[e.currentTarget.id]\r\n      .status;\r\n    const updatedData = userData;\r\n    updatedData[chosenDay] = updatedTasks;\r\n    dispatch({ type: \"update\", payload: updatedData });\r\n    const updates = {};\r\n    updates[`/tasks/${GetUserId()}/${chosenDay}`] = updatedTasks;\r\n    UpdateUserData(updatedTasks, `/tasks/${GetUserId()}/${chosenDay}`);\r\n  };\r\n\r\n  return (\r\n    <TodoListWrapper>\r\n      <RedirectWrapper isRedirect={!isUserLoggedIn} to={LINKS.LOGIN} />\r\n      <Calendar\r\n        chosenDay={chosenDay}\r\n        handleChoosingDay={useCallback(\r\n          (e) => {\r\n            setChosenDay(e.currentTarget.id);\r\n          },\r\n          [chosenDay]\r\n        )}\r\n        userData={userData}\r\n      />\r\n      <TaskList\r\n        tasks={userData[chosenDay] ? Object.entries(userData[chosenDay]) : []}\r\n        day={chosenDay}\r\n        handleUpdateStatus={handleUpdateStatus}\r\n      />\r\n      <ButtonWrapper>\r\n        <ButtonLink\r\n          to={{ pathname: LINKS.TASK, state: { isUpdate: false } }}\r\n          text=\"+ Add new task\"\r\n        />\r\n        <Button onClick={handleLogOut} text=\"Log Out\" />\r\n      </ButtonWrapper>\r\n    </TodoListWrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.input`\r\n  font-family: inherit;\r\n  height: 30px;\r\n  border: 3px solid ${(props) => (props.isError ? \"red\" : \"orange\")};\r\n  border-radius: 10px;\r\n  width: 280px;\r\n  outline: none;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledInput } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInput(props) {\r\n  return (\r\n    <StyledInput\r\n      type={props.type}\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      isError={props.isError}\r\n      maxLength={props.maxLength}\r\n    />\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  isError: PropTypes.bool,\r\n  maxLength: PropTypes.number,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from \"./TextInput\";\nexport default TextInput;\n","import Button from \"./Button\";\nexport default Button;\n","import styled from \"styled-components\";\r\n\r\nexport const LoginWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  font-family: \"Rowdies\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: orange;\r\n  & > span {\r\n    color: white;\r\n    font-size: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const LoginContainer = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  justify-content: space-evenly;\r\n`;\r\n","import { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const showErrorToast = (text) => {\r\n  toast.error(text, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    autoClose: 3500,\r\n  });\r\n};\r\n\r\nexport const showSuccessToast = (text) => {\r\n  toast.success(text, {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    autoClose: 3500,\r\n  });\r\n};\r\n\r\nexport default ToastContainer;\r\n","import LoginPage from \"./Login\";\nexport default LoginPage;\n","import { React, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextInput from \"components/textInput\";\r\nimport Button from \"components/Button\";\r\nimport { LoginUser } from \"services/firebaseAuthQueries\";\r\nimport { LoginWrapper, LoginContainer } from \"./styles\";\r\nimport ToastContainer, { showErrorToast } from \"services/showToast\";\r\nimport { LINKS } from \"utils/constants\";\r\nimport RedirectWrapper from \"services/redirect\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isRedirect, setRedirect] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    if (email === \"\" || password === \"\") {\r\n      showErrorToast(\"Fill all fields please\");\r\n      return;\r\n    }\r\n\r\n    const loginResult = await LoginUser(email, password);\r\n    if (loginResult.isSuccessful) {\r\n      setRedirect(true);\r\n    } else {\r\n      showErrorToast(loginResult.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <RedirectWrapper isRedirect={isRedirect} to={LINKS.HOME} />\r\n      <span>Todo-List</span>\r\n      <LoginContainer>\r\n        <span>Please Login</span>\r\n        <TextInput\r\n          onChange={useCallback((e) => setEmail(e.target.value), [email])}\r\n          value={email}\r\n          type=\"text\"\r\n          placeholder=\"E-mail\"\r\n        />\r\n        <TextInput\r\n          onChange={useCallback((e) => setPassword(e.target.value), [password])}\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button onClick={handleLogin} text=\"Sign In\" />\r\n        <Link to=\"/register\">Dont have an account? Sign Up here!</Link>\r\n      </LoginContainer>\r\n      <ToastContainer />\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RegisterWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  font-family: \"Rowdies\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: orange;\r\n  & > span {\r\n    color: white;\r\n    font-size: 50px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const RegisterContainer = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  justify-content: space-evenly;\r\n`;\r\n","import RegisterPage from \"./Register\";\nexport default RegisterPage;\n","import { React, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextInput from \"components/textInput\";\r\nimport Button from \"components/Button\";\r\nimport { RegisterWrapper, RegisterContainer } from \"./styles\";\r\nimport ToastContainer, { showErrorToast } from \"services/showToast\";\r\nimport { RegisterUser } from \"services/firebaseAuthQueries\";\r\nimport { CreateUserFolder } from \"services/firebaseDBQueries\";\r\nimport RedirectWrapper from \"services/redirect\";\r\nimport { LINKS } from \"utils/constants\";\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordComfirm, setPasswordConfirm] = useState(\"\");\r\n  const [isRedirect, setRedirect] = useState(false);\r\n\r\n  const handleSignUp = async () => {\r\n    if (email === \"\" || password === \"\" || passwordComfirm === \"\") {\r\n      showErrorToast(\"Fill all fields please\");\r\n      return;\r\n    }\r\n    if (password !== passwordComfirm) {\r\n      showErrorToast(\"Passwords should match\");\r\n      return;\r\n    }\r\n\r\n    const registerResult = await RegisterUser(email, password);\r\n    if (registerResult.isSuccessful) {\r\n      const queryResult = await CreateUserFolder(registerResult.data);\r\n      if (queryResult) setRedirect(true);\r\n    } else {\r\n      showErrorToast(registerResult.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RegisterWrapper>\r\n      <RedirectWrapper isRedirect={isRedirect} to={LINKS.HOME} />\r\n      <span>Todo-List</span>\r\n      <RegisterContainer>\r\n        <span>Please Register</span>\r\n        <TextInput\r\n          onChange={useCallback((e) => setEmail(e.target.value), [email])}\r\n          value={email}\r\n          type=\"text\"\r\n          placeholder=\"E-mail\"\r\n        />\r\n        <TextInput\r\n          onChange={useCallback((e) => setPassword(e.target.value), [password])}\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <TextInput\r\n          onChange={useCallback((e) => setPasswordConfirm(e.target.value), [\r\n            passwordComfirm,\r\n          ])}\r\n          value={passwordComfirm}\r\n          type=\"password\"\r\n          placeholder=\"Comfirm password\"\r\n        />\r\n        <Button onClick={handleSignUp} text=\"Sign Up\" />\r\n        <Link to=\"/login\">Already have an account? Sign In here!</Link>\r\n      </RegisterContainer>\r\n      <ToastContainer />\r\n    </RegisterWrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TaskCreatorWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const TaskCreatorContainer = styled.div`\r\n  max-width: 768px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  & > * {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  & > span {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledTextArea = styled.textarea`\r\n  border: 2px solid orange;\r\n  width: 280px;\r\n  height: 200px;\r\n`;\r\n","import TaskCreatorPage from \"./TaskCreator\";\nexport default TaskCreatorPage;\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport Button from \"components/Button\";\r\nimport TextInput from \"components/textInput\";\r\nimport Calendar from \"components/Calendar\";\r\nimport ButtonLink from \"components/Link\";\r\nimport {\r\n  TaskCreatorContainer,\r\n  TaskCreatorWrapper,\r\n  StyledTextArea,\r\n} from \"./styles\";\r\nimport ToastContainer, {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"services/showToast\";\r\nimport {\r\n  UpdateUserData,\r\n  AddUserData,\r\n  DeleteUserData,\r\n} from \"services/firebaseDBQueries\";\r\nimport { GetUserId } from \"services/firebaseAuthQueries\";\r\nimport { auth } from \"api/firebase\";\r\nimport RedirectWrapper from \"services/redirect\";\r\nimport { LINKS } from \"utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TaskPage = (props) => {\r\n  const {\r\n    isUpdate,\r\n    textName,\r\n    taskId,\r\n    taskDay,\r\n    taskDescription,\r\n  } = props.location.state;\r\n\r\n  const [chosenDay, setChosenDay] = useState(\r\n    taskDay || format(new Date(Date.now()), \"yyyy-MM-dd\")\r\n  );\r\n  const [taskName, setTaskName] = useState(textName || \"\");\r\n  const [description, setDescription] = useState(taskDescription || \"\");\r\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\r\n  const [isRedirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserLoggedIn(true);\r\n      } else {\r\n        setUserLoggedIn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTaskSave = async () => {\r\n    if (taskName === \"\") {\r\n      showErrorToast(\"Please enter your task\");\r\n      return;\r\n    }\r\n\r\n    if (isUpdate) {\r\n      const updatedTask = {\r\n        text: taskName,\r\n        status: false,\r\n        description,\r\n      };\r\n\r\n      let queryResult = UpdateUserData(\r\n        updatedTask,\r\n        `tasks/${GetUserId()}/${chosenDay}/${taskId}`\r\n      );\r\n      if (queryResult) {\r\n        showSuccessToast(\"Task successfully saved\");\r\n      }\r\n    } else {\r\n      const newTask = {\r\n        text: taskName,\r\n        status: false,\r\n        description,\r\n      };\r\n      let queryResult = await AddUserData(\r\n        newTask,\r\n        `tasks/${GetUserId()}/${chosenDay}`\r\n      );\r\n      if (queryResult) {\r\n        setRedirect(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTaskDelete = async () => {\r\n    const queryResult = await DeleteUserData(\r\n      `tasks/${GetUserId()}/${chosenDay}/${taskId}`\r\n    );\r\n    if (queryResult) setRedirect(true);\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorWrapper>\r\n      <RedirectWrapper isRedirect={!isUserLoggedIn} to={LINKS.LOGIN} />\r\n      <RedirectWrapper isRedirect={isRedirect} to={LINKS.HOME} />\r\n      <TaskCreatorContainer>\r\n        {isUpdate ? (\r\n          <>\r\n            <span>Update your task!</span>\r\n            <span>This task is assigned on {chosenDay}</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>Create your task!</span>\r\n            <span>Choose a day</span>\r\n            <Calendar\r\n              chosenDay={chosenDay}\r\n              handleChoosingDay={useCallback(\r\n                (e) => setChosenDay(e.currentTarget.id),\r\n                [chosenDay]\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <TextInput\r\n          type=\"text\"\r\n          value={taskName}\r\n          onChange={useCallback((e) => setTaskName(e.target.value), [taskName])}\r\n          placeholder=\"Write your task (50 symbols max)\"\r\n          maxLength={50}\r\n        />\r\n        <StyledTextArea\r\n          placeholder=\"Write your description\"\r\n          value={description}\r\n          onChange={useCallback((e) => setDescription(e.target.value), [\r\n            description,\r\n          ])}\r\n        />\r\n        <Button\r\n          onClick={handleTaskSave}\r\n          text={isUpdate ? \"Update task\" : \"Create Task\"}\r\n        />\r\n        {isUpdate ? (\r\n          <Button onClick={handleTaskDelete} isDanger text=\"Delete task\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <ButtonLink to={LINKS.HOME} text=\"Go back\" />\r\n      </TaskCreatorContainer>\r\n      <ToastContainer />\r\n    </TaskCreatorWrapper>\r\n  );\r\n};\r\n\r\nTaskPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TaskPage;\r\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"pages/HomePage\";\nimport LoginPage from \"pages/Login\";\nimport RegisterPage from \"pages/Register\";\nimport TaskPage from \"pages/TaskCreator\";\nimport { LINKS } from \"utils/constants\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect from={LINKS.ROOT} to={LINKS.HOME} exact />\n        <Route path={LINKS.HOME}>\n          <HomePage />\n        </Route>\n        <Route path={LINKS.LOGIN}>\n          <LoginPage />\n        </Route>\n        <Route path={LINKS.REGISTER}>\n          <RegisterPage />\n        </Route>\n        <Route path={LINKS.TASK} component={TaskPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line no-console\nreportWebVitals();\n"],"sourceRoot":""}