{"version":3,"sources":["components/Checkbox/index.js","components/TaskList/index.js","components/Calendar/dayConfig.js","components/Carousel/index.js","components/Calendar/index.js","components/Button/index.js","api/firebase.js","components/Link/index.js","features/HomePage/index.js","components/textInput/index.js","features/Login/index.js","features/Register/index.js","features/TaskCreator/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["CheckboxContainer","styled","div","Icon","svg","StyledCheckbox","input","attrs","type","props","checked","Checkbox","className","onChange","value","onClick","id","viewBox","points","TaskListContainer","Task","StyledLink","Link","TaskList","console","log","tasks","length","map","index","status","handleUpdateStatus","to","pathname","state","isUpdate","textName","text","taskId","taskDay","day","taskDescription","description","dayConfig","0","1","2","3","4","5","6","CarouselContainer","CarouselWrapper","CarouselContentWrapper","CarouselContent","show","CarouselButton","button","CarouselButtonLeft","CarouselButtonRight","Carousel","children","useState","currentIndex","setCurrentIndex","setLength","useEffect","prevState","CalendarContainer","CalendarItem","isChosen","Markers","hasFinished","hasUnfinished","Calendar","calendarItems","calendarRef","useRef","blockWidth","setBlockWidth","current","offsetWidth","Math","round","date","Date","now","chosenDay","i","format","userData","Object","entries","find","push","handleChoosingDay","getDay","getDate","setDate","ref","StyledButton","isDanger","Button","process","REACT_APP_FIREBASE_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","firebaseConfig","apiKey","authDomain","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","databaseURL","firebase_app","firebase","initializeApp","database","auth","ButtonLink","TodoListWrapper","ButtonWrapper","HomePage","isUserLoggedIn","setUserLoggedIn","useReducer","x","forceUpdate","setUserData","setChosenDay","onAuthStateChanged","user","uid","get","then","snapshot","exists","val","data","catch","error","e","currentTarget","target","updatedTasks","updatedData","updates","currentUser","update","signOut","StyledInput","isError","TextInput","placeholder","LoginWrapper","LoginContainer","LoginPage","email","setEmail","password","setPassword","isRedirect","setRedirect","signInWithEmailAndPassword","userCredential","code","toast","position","POSITION","TOP_CENTER","autoClose","message","RegisterWrapper","RegisterContainer","RegisterPage","passwordComfirm","setPasswordConfirm","createUserWithEmailAndPassword","tasksRef","newUser","TaskCreatorWrapper","TaskCreatorContainer","StyledTextArea","textarea","CreateTaskPage","location","taskName","setTaskName","setDescription","userTasksRef","updatedTask","success","newTask","remove","App","from","exact","path","Login","Register","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8987c704.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background-color: ${(props) => (props.checked ? \"orange\" : \"white\")};\n  border-radius: 50%;\n  border: 2px solid orange;\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${(props) => (props.checked ? \"visible\" : \"hidden\")};\n  }\n`;\n\nconst Checkbox = ({ className, checked, onChange, value }) => (\n  <CheckboxContainer className={className}>\n    <StyledCheckbox checked={checked} onClick={onChange} id={value}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n\nexport default Checkbox;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Checkbox from \"../Checkbox\"\n\nconst TaskListContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n   solid red;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > span {\n    align-self: flex-start;\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  .placeholder {\n    font-weight: normal;\n    color: grey;\n    font-size: 15px;\n  }\n`;\n\nconst Task = styled.div`\n  width: 80%;\n  height: 30px;\n   solid blue;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n\n  & > * {\n    margin-left: 20px;\n    height: 20px;\n  }\n  img {\n    justify-self: flex-end;\n    display: none;\n    cursor: pointer;\n  }\n  :hover {\n    img {\n      display: block;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  :visited {\n    color: black;\n  }\n`;\n\nconst TaskList = (props) => {\n  console.log(\"TASK LIST\", props.tasks);\n  return (\n    <TaskListContainer>\n      <span>Tasks for this day</span>\n      {!!props.tasks.length ? (\n        props.tasks.map((value, index) => {\n          console.log(value[1].status);\n          return (\n            <Task key={index}>\n              <Checkbox \n                checked={value[1].status}\n                onChange={props.handleUpdateStatus}\n                value={value[0]}/>\n              {/* <input\n                type=\"checkbox\"\n                checked={value[1].status}\n                onChange={props.handleUpdateStatus}\n                value={value[0]}\n              /> */}\n              <StyledLink\n                to={{\n                  pathname: \"/create-task\",\n                  state: {\n                    isUpdate: true,\n                    textName: value[1].text,\n                    taskId: value[0],\n                    taskDay: props.day,\n                    taskDescription: value[1].description,\n                  },\n                }}\n              >\n                <span>{value[1].text}</span>\n              </StyledLink>\n            </Task>\n          );\n        })\n      ) : (\n        <span className=\"placeholder\">\n          You don't have any tasks for this day\n        </span>\n      )}\n    </TaskListContainer>\n  );\n};\n\nexport default TaskList;\n","const dayConfig = {\n  0: \"Sun\",\n  1: \"Mon\",\n  2: \"Tue\",\n  3: \"Wed\",\n  4: \"Thu\",\n  5: \"Fri\",\n  6: \"Sat\",\n};\n\nexport default dayConfig;\n","import { React, useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst CarouselContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CarouselWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  justify-content: center;\n`;\n\nconst CarouselContentWrapper = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  width: 75%;\n  height: 100%;\n`;\n\nconst CarouselContent = styled.div.attrs((props) => ({\n  show: props.show,\n}))`\n  display: flex;\n  justify-content: flex-start;\n  transition: all 250ms linear;\n  width: 100%;\n  -ms-overflow-style: none; /* hide scrollbar in IE and Edge */\n  scrollbar-width: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CarouselButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 38px;\n  height: 38px;\n  border: none;\n  background-color: Transparent;\n  cursor: pointer;\n  color: gray;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst CarouselButtonLeft = styled(CarouselButton)`\n  left: 8px;\n`;\n\nconst CarouselButtonRight = styled(CarouselButton)`\n  right: 8px;\n`;\n\nconst Carousel = (props) => {\n  const { children, show } = props;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [length, setLength] = useState(children.length);\n\n  console.log(show);\n\n  useEffect(() => {\n    setLength(children.length);\n  }, [children]);\n\n  const next = () => {\n    if (currentIndex < length - show) {\n      setCurrentIndex((prevState) => prevState + show);\n    }\n  };\n\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - show);\n    }\n  };\n\n  console.log(currentIndex);\n  return (\n    <CarouselContainer>\n      <CarouselWrapper>\n        {currentIndex > 0 && (\n          <CarouselButtonLeft onClick={prev}>&lt;</CarouselButtonLeft>\n        )}\n\n        <CarouselContentWrapper>\n          <CarouselContent\n            //style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n            show={props.show}\n          >\n            {children.map((value, index) => {\n              if (index >= currentIndex && index < currentIndex + show)\n                return value;\n            })}\n          </CarouselContent>\n        </CarouselContentWrapper>\n\n        {currentIndex < length - show && (\n          <CarouselButtonRight onClick={next}>&gt;</CarouselButtonRight>\n        )}\n      </CarouselWrapper>\n    </CarouselContainer>\n  );\n};\n\nexport default Carousel;\n","import { React, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport dayConfig from \"./dayConfig\";\nimport Carousel from \"../Carousel\";\nimport { format } from \"date-fns\";\n\nconst CalendarContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  height: 200px;\n   solid red;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n\n  & > span {\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n`;\n\nconst CalendarItem = styled.div`\n  width: 50px;\n  height: 90px;\n  margin: 10px;\n  .content {\n    height: 70px;\n    border: 2px solid ${(props) => (props.isChosen ? \"orange\" : \"lightgray\")};\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n\n    cursor: pointer;\n  }\n  .day {\n    color: ${(props) => (props.isChosen ? \"orange\" : \"gray\")};\n  }\n  ${(props) => (props.isChosen ? \"color: orange;\" : \"\")}\n`;\n\nconst Markers = styled.div`\n  height: 20px;\n  width: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  & > * {\n    width: 10px;\n    height: 10px;\n    border: 1px solid orange;\n    border-radius: 50%;\n  }\n\n  .finished {\n    background-color: orange;\n    display: ${(props) => (props.hasFinished ? \"block\" : \"none\")};\n  }\n\n  .unfinished {\n    display: ${(props) => (props.hasUnfinished ? \"block\" : \"none\")};\n  }\n`;\n\nconst Calendar = (props) => {\n  let calendarItems = [];\n  const calendarRef = useRef();\n  const [blockWidth, setBlockWidth] = useState(768);\n  useEffect(() => {\n    setBlockWidth(calendarRef.current.offsetWidth);\n  }, []);\n  let show = Math.round(blockWidth / 100);\n  console.log(\"SHOW\", show);\n  let date = new Date(Date.now());\n  console.log(props.chosenDay);\n  let isChosen = false;\n  for (let i = 0; i < 30; i++) {\n    let hasFinished = false;\n    let hasUnfinished = false;\n\n    if (format(date, \"yyyy-MM-dd\") === props.chosenDay) isChosen = true;\n    else isChosen = false;\n    if (props.userData[format(date, \"yyyy-MM-dd\")]) {\n      Object.entries(props.userData[format(date, \"yyyy-MM-dd\")]).find(\n        (value) => {\n          if (value[1].status === true) hasFinished = true;\n          else if (value[1].status === false) hasUnfinished = true;\n        }\n      );\n    }\n    calendarItems.push(\n      <CalendarItem\n        onClick={props.handleChoosingDay}\n        isChosen={isChosen}\n        id={format(date, \"yyyy-MM-dd\")}\n      >\n        <div className=\"content\">\n          <div className=\"day\">{dayConfig[date.getDay()]}</div>\n          <div className=\"date\">{date.getDate()}</div>\n        </div>\n        <Markers hasFinished={hasFinished} hasUnfinished={hasUnfinished}>\n          <div className=\"unfinished\"></div>\n          <div className=\"finished\"></div>\n        </Markers>\n      </CalendarItem>\n    );\n    date.setDate(date.getDate() + 1);\n  }\n  return (\n    <CalendarContainer ref={calendarRef}>\n      <span>Calendar</span>\n      <Carousel show={show}>{calendarItems}</Carousel>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: ${(props) => (props.isDanger ? \"red\" : \"orange\")};\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst Button = (props) => {\n  return (\n    <StyledButton isDanger={props.isDanger} onClick={props.onClick}>\n      {props.text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import firebase from \"firebase\";\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n  databaseURL: REACT_APP_DATABASE_URL,\n};\n// // Initialize Firebase\nconst firebase_app = firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst database = firebase_app.database();\nconst auth = firebase_app.auth();\n\n// if (window.location.hostname === \"localhost\") {\n//   // Point to the RTDB emulator running on localhost.\n//   database.useEmulator(\"localhost\", 9000);\n//   auth.useEmulator(\"localhost\", 9099);\n// }\n\nexport { database, auth };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: orange;\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n`;\n\nconst ButtonLink = (props) => {\n  return <StyledLink to={props.to}>{props.text}</StyledLink>;\n};\n\nexport default ButtonLink;\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport TaskList from \"../../components/TaskList\";\nimport Calendar from \"../../components/Calendar\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport ButtonLink from \"../../components/Link\";\n\nconst TodoListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HomePage = () => {\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n  //const [redirectTaskCreator, setRedirectTaskCreator] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [chosenDay, setChosenDay] = useState(\n    format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n\n  console.log(\"ALL USER DATA\", userData);\n\n  useEffect(() => {\n    console.log(\"EFFECT\");\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        let userTasksRef = database.ref(\"tasks/\" + user.uid);\n        userTasksRef\n          .get()\n          .then(function (snapshot) {\n            if (snapshot.exists()) {\n              console.log(snapshot.val());\n              let data = snapshot.val();\n              setUserData(data);\n            } else {\n              console.log(\"No data available\");\n            }\n          })\n          .catch(function (error) {\n            console.error(error);\n          });\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleLogOut = () => {\n    auth.signOut().then(() => {\n      setUserLoggedIn(false);\n    });\n  };\n\n  const handleUpdateStatus = (e) => {\n    console.log(\"IS CHECKBOX\",e.target, e.currentTarget);\n    let updatedTasks = userData[chosenDay];\n    updatedTasks[e.currentTarget.id].status =  !updatedTasks[e.currentTarget.id].status;\n    let updatedData = userData;\n    updatedData[chosenDay] = updatedTasks;\n    setUserData(updatedData);\n    let updates = {};\n    updates[\"/tasks/\" + auth.currentUser.uid + \"/\" + chosenDay] = updatedTasks;\n    database.ref().update(updates);\n    forceUpdate();\n  };\n\n  return (\n    <TodoListWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to={`/login`} />}\n      {/*redirectTaskCreator ? <Redirect to={`/create-task`} /> : \"\"*/}\n      <Calendar\n        chosenDay={chosenDay}\n        handleChoosingDay={(e) => {\n          setChosenDay(e.currentTarget.id);\n        }}\n        userData={userData}\n      ></Calendar>\n      <TaskList\n        tasks={userData[chosenDay] ? Object.entries(userData[chosenDay]) : []}\n        day={chosenDay}\n        handleUpdateStatus={handleUpdateStatus}\n      ></TaskList>\n      <ButtonWrapper>\n        <ButtonLink\n          to={{ pathname: \"/create-task\", state: { isUpdate: false } }}\n          text=\"+ Add new task\"\n        />\n        <Button onClick={handleLogOut} text={\"logout\"} />\n      </ButtonWrapper>\n    </TodoListWrapper>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  height: 30px;\n  border: 3px solid ${(props) => (props.isError ? \"red\" : \"orange\")};\n  border-radius: 10px;\n  width: 280px;\n  outline: none;\n`;\n\nconst TextInput = (props) => {\n  //console.log(props.value)\n  return (\n    <StyledInput\n      type={props.type}\n      placeholder={props.placeholder}\n      onChange={props.onChange}\n      value={props.value}\n      isError={props.isError}\n    ></StyledInput>\n  );\n};\n\nexport default TextInput;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { auth } from \"../../api/firebase\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleLogin = () => {\n    if (email === \"\" || password === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        console.log(userCredential.user);\n        setRedirect(true);\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/user-not-found\":\n            toast.error(\"User with this email not found\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/wrong-password\":\n            toast.error(\"Wrong password, try again\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n\n        console.log(error.code);\n        console.log(error.message);\n        // ..\n      });\n  };\n\n  console.log(isRedirect);\n  return (\n    <LoginWrapper>\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <span>Todo-List</span>\n      <LoginContainer>\n        <span>Please Login</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button onClick={handleLogin} text=\"Sign In\" />\n        <Link to=\"/register\">Dont have an account? Sign Up here!</Link>\n      </LoginContainer>\n      <ToastContainer />\n    </LoginWrapper>\n  );\n};\n\nexport default LoginPage;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst RegisterWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst RegisterContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst RegisterPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordComfirm, setPasswordConfirm] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleSignUp = () => {\n    if (email === \"\" || password === \"\" || passwordComfirm === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    } else if (password !== passwordComfirm) {\n      toast.error(\"Passwords should match\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let tasksRef = database.ref(`tasks/`);\n        let newUser = {};\n        newUser[`${userCredential.user.uid}`] = \"\";\n        console.log(newUser);\n        tasksRef.update(newUser).then(() => {\n          setRedirect(true);\n        });\n\n        console.log(userCredential.user);\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/weak-password\":\n            toast.error(\n              \"Password is too weak, it should be at least 6 characters\",\n              {\n                position: toast.POSITION.TOP_CENTER,\n                autoClose: 3500,\n              }\n            );\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n        console.log(error.code);\n        console.log(error.message);\n        // ..\n      });\n  };\n\n  return (\n    <RegisterWrapper>\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <span>Todo-List</span>\n      <RegisterContainer>\n        <span>Please Register</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <TextInput\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n          value={passwordComfirm}\n          type=\"password\"\n          placeholder=\"Comfirm password\"\n        />\n        <Button onClick={handleSignUp} text=\"Sign Up\" />\n        <Link to=\"/login\">Already have an account? Sign In here!</Link>\n      </RegisterContainer>\n      <ToastContainer />\n    </RegisterWrapper>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/textInput\";\nimport Calendar from \"../../components/Calendar\";\nimport { format } from \"date-fns\";\nimport { database, auth } from \"../../api/firebase\";\nimport ButtonLink from \"../../components/Link\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst TaskCreatorWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst TaskCreatorContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  & > * {\n    margin-bottom: 10px;\n  }\n\n  & > span {\n    font-size: 20px;\n  }\n`;\n\nconst StyledTextArea = styled.textarea`\n  border: 2px solid orange;\n  width: 280px;\n  height: 200px;\n`;\n\n// const ConfirmationDialog = () => {\n//   return (\n//     <div>\n//       <span>Do you want to delete this?</span>\n//       <button>Yes</button>\n//       <button>Yes</button>\n//     </div>\n//   );\n// }\n\nconst CreateTaskPage = (props) => {\n  console.log(props.location);\n  let {\n    isUpdate,\n    textName,\n    taskId,\n    taskDay,\n    taskDescription,\n  } = props.location.state;\n  const [chosenDay, setChosenDay] = useState(\n    taskDay || format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n  const [taskName, setTaskName] = useState(textName || \"\");\n  const [description, setDescription] = useState(taskDescription || \"\");\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [isRedirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleTaskSave = () => {\n    if (taskName === \"\") {\n      toast.error(\"Please enter your task\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    if (isUpdate) {\n      let userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n      );\n      let updatedTask = {\n        text: taskName,\n        status: false,\n        description: description,\n      };\n      userTasksRef.update(updatedTask).then(() => {\n        toast.success(\"Task successfully saved\", {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 3500,\n        });\n      });\n    } else {\n      let userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}`\n      );\n      let newTask = {\n        text: taskName,\n        status: false,\n        description: description,\n      };\n      userTasksRef.push(newTask).then(() => {\n        // toast.success(\"Task successfully saved\", {\n        //   position: toast.POSITION.TOP_CENTER,\n        //   autoClose: 3500,\n        // });\n        setRedirect(true);\n      });\n    }\n  };\n\n  const handleTaskDelete = () => {\n    // toast(<ConfirmationDialog/>, {\n    //   position: toast.POSITION.TOP_CENTER,\n    //   autoClose: false,\n    // })\n    let userTasksRef = database.ref(\n      `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n    );\n    userTasksRef.remove().then(() => {\n      // toast.success(\"Task successfully deleted\", {\n      //   position: toast.POSITION.TOP_CENTER,\n      //   autoClose: 3500,\n      // });\n      setRedirect(true);\n    });\n  };\n\n  return (\n    <TaskCreatorWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to={`/login`} />}\n      {isRedirect ? <Redirect to={`/home`} /> : \"\"}\n      <TaskCreatorContainer>\n        {isUpdate ? (\n          <span>Update your task!</span>\n        ) : (\n          <>\n            <span>Create your task!</span>\n            <span>Choose a day</span>\n            <Calendar\n              chosenDay={chosenDay}\n              handleChoosingDay={(e) => setChosenDay(e.currentTarget.id)}\n              userData={{}}\n            ></Calendar>\n          </>\n        )}\n        <TextInput\n          value={taskName}\n          onChange={(e) => setTaskName(e.target.value)}\n          placeholder=\"Write your task\"\n        ></TextInput>\n        <StyledTextArea\n          placeholder=\"Write your description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        ></StyledTextArea>\n        <Button\n          onClick={handleTaskSave}\n          text={isUpdate ? \"Update task\" : \"Create Task\"}\n        ></Button>\n        {isUpdate ? (\n          <Button\n            onClick={handleTaskDelete}\n            isDanger={true}\n            text={\"Delete task\"}\n          ></Button>\n        ) : (\n          \"\"\n        )}\n        <ButtonLink to=\"/home\" text=\"Go back\" />\n      </TaskCreatorContainer>\n      <ToastContainer />\n    </TaskCreatorWrapper>\n  );\n};\n\nexport default CreateTaskPage;\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"../features/HomePage\";\nimport LoginPage from \"../features/Login\";\nimport RegisterPage from \"../features/Register\";\nimport CreateTaskPage from \"../features/TaskCreator\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect from={\"/\"} to={`/home`} exact />\n        <Route path={`/home`}>\n          <HomePage />\n        </Route>\n        <Route path={`/login`}>\n          <LoginPage />\n        </Route>\n        <Route path={`/register`}>\n          <RegisterPage />\n        </Route>\n        <Route path={`/create-task`} component={CreateTaskPage}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}