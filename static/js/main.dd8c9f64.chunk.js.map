{"version":3,"sources":["components/Checkbox/index.js","components/TaskList/index.js","components/Calendar/dayConfig.js","components/Calendar/monthConfig.js","components/Carousel/index.js","components/Calendar/index.js","components/Button/index.js","api/firebase.js","components/Link/index.js","features/HomePage/index.js","components/textInput/index.js","features/Login/index.js","features/Register/index.js","features/TaskCreator/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["CheckboxContainer","styled","div","Icon","svg","StyledCheckbox","props","checked","Checkbox","className","onChange","value","onClick","id","viewBox","points","TaskListContainer","Task","StyledLink","Link","TaskList","tasks","length","map","index","status","handleUpdateStatus","to","pathname","state","isUpdate","textName","text","taskId","taskDay","day","taskDescription","description","dayConfig","0","1","2","3","4","5","6","monthConfig","7","8","9","10","11","CarouselContainer","CarouselWrapper","CarouselContentWrapper","CarouselContent","attrs","show","CarouselButton","button","CarouselButtonLeft","CarouselButtonRight","Carousel","children","setMaxElementsShown","maxElementsShown","useState","currentIndex","setCurrentIndex","setLength","useEffect","prevState","CalendarContainer","CalendarItem","isChosen","Markers","hasFinished","hasUnfinished","Calendar","calendarItems","calendarRef","useRef","blockWidth","setBlockWidth","current","offsetWidth","Math","round","date","Date","now","i","format","chosenDay","userData","Object","entries","find","push","handleChoosingDay","getDay","getMonth","getDate","setDate","ref","StyledButton","isDanger","Button","process","REACT_APP_FIREBASE_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","firebaseConfig","apiKey","authDomain","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","databaseURL","firebase_app","firebase","initializeApp","database","auth","ButtonLink","TodoListWrapper","ButtonWrapper","HomePage","isUserLoggedIn","setUserLoggedIn","useReducer","x","forceUpdate","setUserData","setChosenDay","onAuthStateChanged","user","uid","get","then","snapshot","exists","data","val","e","currentTarget","updatedTasks","updatedData","updates","currentUser","update","signOut","StyledInput","input","isError","TextInput","type","placeholder","LoginWrapper","LoginContainer","LoginPage","email","setEmail","password","setPassword","isRedirect","setRedirect","target","signInWithEmailAndPassword","catch","error","code","toast","position","POSITION","TOP_CENTER","autoClose","RegisterWrapper","RegisterContainer","RegisterPage","passwordComfirm","setPasswordConfirm","createUserWithEmailAndPassword","userCredential","tasksRef","newUser","TaskCreatorWrapper","TaskCreatorContainer","StyledTextArea","textarea","CreateTaskPage","location","taskName","setTaskName","setDescription","userTasksRef","updatedTask","success","newTask","remove","App","from","exact","path","Login","Register","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd8c9f64.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background-color: ${(props) => (props.checked ? \"orange\" : \"white\")};\n  border-radius: 50%;\n  border: 2px solid orange;\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${(props) => (props.checked ? \"visible\" : \"hidden\")};\n  }\n`;\n\nconst Checkbox = ({ className, checked, onChange, value }) => (\n  <CheckboxContainer className={className}>\n    <StyledCheckbox checked={checked} onClick={onChange} id={value}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n\nexport default Checkbox;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Checkbox from \"../Checkbox\";\n\nconst TaskListContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n   solid red;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > span {\n    align-self: flex-start;\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  .placeholder {\n    font-weight: normal;\n    color: grey;\n    font-size: 15px;\n  }\n`;\n\nconst Task = styled.div`\n  width: 80%;\n  height: 30px;\n   solid blue;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n\n  & > * {\n    margin-left: 20px;\n    height: 20px;\n  }\n  img {\n    justify-self: flex-end;\n    display: none;\n    cursor: pointer;\n  }\n  :hover {\n    img {\n      display: block;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  :visited {\n    color: black;\n  }\n`;\n\nconst TaskList = (props) => {\n  return (\n    <TaskListContainer>\n      <span>Tasks for this day</span>\n      {props.tasks.length ? (\n        props.tasks.map((value, index) => {\n          return (\n            <Task key={index}>\n              <Checkbox\n                checked={value[1].status}\n                onChange={props.handleUpdateStatus}\n                value={value[0]}\n              />\n              <StyledLink\n                to={{\n                  pathname: \"/create-task\",\n                  state: {\n                    isUpdate: true,\n                    textName: value[1].text,\n                    taskId: value[0],\n                    taskDay: props.day,\n                    taskDescription: value[1].description,\n                  },\n                }}\n              >\n                <span>{value[1].text}</span>\n              </StyledLink>\n            </Task>\n          );\n        })\n      ) : (\n        <span className=\"placeholder\">\n          You dont have any tasks for this day\n        </span>\n      )}\n    </TaskListContainer>\n  );\n};\n\nexport default TaskList;\n","const dayConfig = {\n  0: \"Sun\",\n  1: \"Mon\",\n  2: \"Tue\",\n  3: \"Wed\",\n  4: \"Thu\",\n  5: \"Fri\",\n  6: \"Sat\",\n};\n\nexport default dayConfig;\n","const monthConfig = {\n  0: \"Jan\",\n  1: \"Feb\",\n  2: \"Mar\",\n  3: \"Apr\",\n  4: \"May\",\n  5: \"Jun\",\n  6: \"Jul\",\n  7: \"Aug\",\n  8: \"Sep\",\n  9: \"Oct\",\n  10: \"Nov\",\n  11: \"Dec\",\n};\n\nexport default monthConfig;\n","import { React, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst CarouselContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CarouselWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  justify-content: center;\n`;\n\nconst CarouselContentWrapper = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  width: 75%;\n  height: 100%;\n`;\n\nconst CarouselContent = styled.div.attrs((props) => ({\n  show: props.show,\n}))`\n  display: flex;\n  justify-content: flex-start;\n  transition: all 250ms linear;\n  width: 100%;\n  -ms-overflow-style: none; /* hide scrollbar in IE and Edge */\n  scrollbar-width: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CarouselButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 38px;\n  height: 38px;\n  border: none;\n  background-color: Transparent;\n  cursor: pointer;\n  color: gray;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst CarouselButtonLeft = styled(CarouselButton)`\n  left: 8px;\n`;\n\nconst CarouselButtonRight = styled(CarouselButton)`\n  right: 8px;\n`;\n\nconst Carousel = (props) => {\n  const { children, show, setMaxElementsShown, maxElementsShown } = props;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [length, setLength] = useState(children.length);\n\n  useEffect(() => {\n    setLength(children.length);\n  }, [children]);\n\n  const next = () => {\n    if (currentIndex < length - show) {\n      setCurrentIndex((prevState) => prevState + show);\n    }\n    if (currentIndex < length - show * 2) {\n      setMaxElementsShown(maxElementsShown + 30);\n    }\n  };\n\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - show);\n    }\n  };\n\n  return (\n    <CarouselContainer>\n      <CarouselWrapper>\n        {currentIndex > 0 && (\n          <CarouselButtonLeft onClick={prev}>&lt;</CarouselButtonLeft>\n        )}\n\n        <CarouselContentWrapper>\n          <CarouselContent\n            // style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n            show={props.show}\n          >\n            {children.map((value, index) => {\n              if (index >= currentIndex && index < currentIndex + show)\n                return value;\n            })}\n          </CarouselContent>\n        </CarouselContentWrapper>\n\n        {currentIndex < length - show && (\n          <CarouselButtonRight onClick={next}>&gt;</CarouselButtonRight>\n        )}\n      </CarouselWrapper>\n    </CarouselContainer>\n  );\n};\n\nexport default Carousel;\n","import { React, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { format } from \"date-fns\";\nimport dayConfig from \"./dayConfig\";\nimport monthConfig from \"./monthConfig\";\nimport Carousel from \"../Carousel\";\n\nconst CalendarContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  height: 200px;\n   solid red;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n\n  & > span {\n    margin-left: 50px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n`;\n\nconst CalendarItem = styled.div`\n  width: 50px;\n  height: 90px;\n  margin: 10px;\n  .content {\n    height: 70px;\n    border: 2px solid ${(props) => (props.isChosen ? \"orange\" : \"lightgray\")};\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n\n    cursor: pointer;\n  }\n  .day,\n  .month {\n    color: ${(props) => (props.isChosen ? \"orange\" : \"gray\")};\n  }\n  .month {\n    font-size: 13px;\n  }\n  ${(props) => (props.isChosen ? \"color: orange;\" : \"\")}\n`;\n\nconst Markers = styled.div`\n  height: 20px;\n  width: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  & > * {\n    width: 10px;\n    height: 10px;\n    border: 1px solid orange;\n    border-radius: 50%;\n  }\n\n  .finished {\n    background-color: orange;\n    display: ${(props) => (props.hasFinished ? \"block\" : \"none\")};\n  }\n\n  .unfinished {\n    display: ${(props) => (props.hasUnfinished ? \"block\" : \"none\")};\n  }\n`;\n\nconst Calendar = (props) => {\n  const calendarItems = [];\n  const calendarRef = useRef();\n  const [blockWidth, setBlockWidth] = useState(768);\n  const [maxElementsShown, setMaxElementsShown] = useState(30);\n\n  useEffect(() => {\n    setBlockWidth(calendarRef.current.offsetWidth);\n  }, []);\n\n  const show = Math.round(blockWidth / 100);\n  const date = new Date(Date.now());\n  let isChosen = false;\n\n  for (let i = 0; i < maxElementsShown; i++) {\n    let hasFinished = false;\n    let hasUnfinished = false;\n\n    if (format(date, \"yyyy-MM-dd\") === props.chosenDay) isChosen = true;\n    else isChosen = false;\n\n    if (props.userData[format(date, \"yyyy-MM-dd\")]) {\n      Object.entries(props.userData[format(date, \"yyyy-MM-dd\")]).find(\n        (value) => {\n          if (value[1].status === true) hasFinished = true;\n          else if (value[1].status === false) hasUnfinished = true;\n        }\n      );\n    }\n\n    calendarItems.push(\n      <CalendarItem\n        onClick={props.handleChoosingDay}\n        isChosen={isChosen}\n        id={format(date, \"yyyy-MM-dd\")}\n      >\n        <div className=\"content\">\n          <div className=\"day\">{dayConfig[date.getDay()]}</div>\n          <div className=\"month\">{monthConfig[date.getMonth()]}</div>\n          <div className=\"date\">{date.getDate()}</div>\n        </div>\n        <Markers hasFinished={hasFinished} hasUnfinished={hasUnfinished}>\n          <div className=\"unfinished\" />\n          <div className=\"finished\" />\n        </Markers>\n      </CalendarItem>\n    );\n\n    date.setDate(date.getDate() + 1);\n  }\n\n  return (\n    <CalendarContainer ref={calendarRef}>\n      <span>Calendar</span>\n      <Carousel\n        maxElementsShown={maxElementsShown}\n        setMaxElementsShown={setMaxElementsShown}\n        show={show}\n      >\n        {calendarItems}\n      </Carousel>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: ${(props) => (props.isDanger ? \"red\" : \"orange\")};\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  font-size: 14px;\n`;\n\nconst Button = (props) => (\n  <StyledButton isDanger={props.isDanger} onClick={props.onClick}>\n    {props.text}\n  </StyledButton>\n);\n\nexport default Button;\n","import firebase from \"firebase\";\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n  REACT_APP_MEASUREMENT_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n  measurementId: REACT_APP_MEASUREMENT_ID,\n  databaseURL: REACT_APP_DATABASE_URL,\n};\n// // Initialize Firebase\nconst firebase_app = firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst database = firebase_app.database();\nconst auth = firebase_app.auth();\n\n// if (window.location.hostname === \"localhost\") {\n//   // Point to the RTDB emulator running on localhost.\n//   database.useEmulator(\"localhost\", 9000);\n//   auth.useEmulator(\"localhost\", 9099);\n// }\n\nexport { database, auth };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  max-width: 280px;\n  width: 40%;\n  height: 30px;\n  background-color: orange;\n  border: 0;\n  border-radius: 10px;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n`;\n\nconst ButtonLink = (props) => (\n  <StyledLink to={props.to}>{props.text}</StyledLink>\n);\n\nexport default ButtonLink;\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport TaskList from \"../../components/TaskList\";\nimport Calendar from \"../../components/Calendar\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport ButtonLink from \"../../components/Link\";\n\nconst TodoListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HomePage = () => {\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n  const [userData, setUserData] = useState({});\n  const [chosenDay, setChosenDay] = useState(\n    format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        const userTasksRef = database.ref(`tasks/${user.uid}`);\n        userTasksRef.get().then((snapshot) => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            setUserData(data);\n          }\n        });\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleLogOut = () => {\n    auth.signOut().then(() => {\n      setUserLoggedIn(false);\n    });\n  };\n\n  const handleUpdateStatus = (e) => {\n    const updatedTasks = userData[chosenDay];\n    updatedTasks[e.currentTarget.id].status = !updatedTasks[e.currentTarget.id]\n      .status;\n    const updatedData = userData;\n    updatedData[chosenDay] = updatedTasks;\n    setUserData(updatedData);\n    const updates = {};\n    updates[`/tasks/${auth.currentUser.uid}/${chosenDay}`] = updatedTasks;\n    database.ref().update(updates);\n    forceUpdate();\n  };\n\n  return (\n    <TodoListWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to=\"/login\" />}\n      <Calendar\n        chosenDay={chosenDay}\n        handleChoosingDay={(e) => {\n          setChosenDay(e.currentTarget.id);\n        }}\n        userData={userData}\n      />\n      <TaskList\n        tasks={userData[chosenDay] ? Object.entries(userData[chosenDay]) : []}\n        day={chosenDay}\n        handleUpdateStatus={handleUpdateStatus}\n      />\n      <ButtonWrapper>\n        <ButtonLink\n          to={{ pathname: \"/create-task\", state: { isUpdate: false } }}\n          text=\"+ Add new task\"\n        />\n        <Button onClick={handleLogOut} text=\"Log Out\" />\n      </ButtonWrapper>\n    </TodoListWrapper>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  font-family: inherit;\n  height: 30px;\n  border: 3px solid ${(props) => (props.isError ? \"red\" : \"orange\")};\n  border-radius: 10px;\n  width: 280px;\n  outline: none;\n`;\n\nfunction TextInput(props) {\n  return (\n    <StyledInput\n      type={props.type}\n      placeholder={props.placeholder}\n      onChange={props.onChange}\n      value={props.value}\n      isError={props.isError}\n    />\n  );\n}\nexport default TextInput;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { auth } from \"../../api/firebase\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleLogin = () => {\n    if (email === \"\" || password === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setRedirect(true);\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/user-not-found\":\n            toast.error(\"User with this email not found\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/wrong-password\":\n            toast.error(\"Wrong password, try again\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n      });\n  };\n\n  return (\n    <LoginWrapper>\n      {isRedirect ? <Redirect to=\"/home\" /> : \"\"}\n      <span>Todo-List</span>\n      <LoginContainer>\n        <span>Please Login</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button onClick={handleLogin} text=\"Sign In\" />\n        <Link to=\"/register\">Dont have an account? Sign Up here!</Link>\n      </LoginContainer>\n      <ToastContainer />\n    </LoginWrapper>\n  );\n};\n\nexport default LoginPage;\n","import { React, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport TextInput from \"../../components/textInput\";\nimport Button from \"../../components/Button\";\nimport { database, auth } from \"../../api/firebase\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst RegisterWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  font-family: \"Rowdies\";\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: orange;\n  & > span {\n    color: white;\n    font-size: 50px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst RegisterContainer = styled.div`\n  width: 300px;\n  height: 400px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  justify-content: space-evenly;\n`;\n\nconst RegisterPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordComfirm, setPasswordConfirm] = useState(\"\");\n  const [isRedirect, setRedirect] = useState(false);\n\n  const handleSignUp = () => {\n    if (email === \"\" || password === \"\" || passwordComfirm === \"\") {\n      toast.error(\"Fill all fields please\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n    if (password !== passwordComfirm) {\n      toast.error(\"Passwords should match\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        const tasksRef = database.ref(`tasks/`);\n        const newUser = {};\n        newUser[`${userCredential.user.uid}`] = \"\";\n        tasksRef.update(newUser).then(() => {\n          setRedirect(true);\n        });\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            toast.error(\"Enter valid email please\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n            break;\n          case \"auth/weak-password\":\n            toast.error(\n              \"Password is too weak, it should be at least 6 characters\",\n              {\n                position: toast.POSITION.TOP_CENTER,\n                autoClose: 3500,\n              }\n            );\n            break;\n          default:\n            toast.error(\"Something went wrong :(\", {\n              position: toast.POSITION.TOP_CENTER,\n              autoClose: 3500,\n            });\n        }\n      });\n  };\n\n  return (\n    <RegisterWrapper>\n      {isRedirect ? <Redirect to=\"/home\" /> : \"\"}\n      <span>Todo-List</span>\n      <RegisterContainer>\n        <span>Please Register</span>\n        <TextInput\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"text\"\n          placeholder=\"E-mail\"\n        />\n        <TextInput\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <TextInput\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n          value={passwordComfirm}\n          type=\"password\"\n          placeholder=\"Comfirm password\"\n        />\n        <Button onClick={handleSignUp} text=\"Sign Up\" />\n        <Link to=\"/login\">Already have an account? Sign In here!</Link>\n      </RegisterContainer>\n      <ToastContainer />\n    </RegisterWrapper>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { format } from \"date-fns\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/textInput\";\nimport Calendar from \"../../components/Calendar\";\nimport { database, auth } from \"../../api/firebase\";\nimport ButtonLink from \"../../components/Link\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst TaskCreatorWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst TaskCreatorContainer = styled.div`\n  max-width: 768px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  & > * {\n    margin-bottom: 10px;\n  }\n\n  & > span {\n    font-size: 20px;\n  }\n`;\n\nconst StyledTextArea = styled.textarea`\n  border: 2px solid orange;\n  width: 280px;\n  height: 200px;\n`;\n\nconst CreateTaskPage = (props) => {\n  const {\n    isUpdate,\n    textName,\n    taskId,\n    taskDay,\n    taskDescription,\n  } = props.location.state;\n\n  const [chosenDay, setChosenDay] = useState(\n    taskDay || format(new Date(Date.now()), \"yyyy-MM-dd\")\n  );\n  const [taskName, setTaskName] = useState(textName || \"\");\n  const [description, setDescription] = useState(taskDescription || \"\");\n  const [isUserLoggedIn, setUserLoggedIn] = useState(true);\n  const [isRedirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserLoggedIn(true);\n      } else {\n        setUserLoggedIn(false);\n      }\n    });\n  }, []);\n\n  const handleTaskSave = () => {\n    if (taskName === \"\") {\n      toast.error(\"Please enter your task\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n      });\n      return;\n    }\n\n    if (isUpdate) {\n      const userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n      );\n      const updatedTask = {\n        text: taskName,\n        status: false,\n        description,\n      };\n      userTasksRef.update(updatedTask).then(() => {\n        toast.success(\"Task successfully saved\", {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 3500,\n        });\n      });\n    } else {\n      const userTasksRef = database.ref(\n        `tasks/${auth.currentUser.uid}/${chosenDay}`\n      );\n      const newTask = {\n        text: taskName,\n        status: false,\n        description,\n      };\n      userTasksRef.push(newTask).then(() => {\n        setRedirect(true);\n      });\n    }\n  };\n\n  const handleTaskDelete = () => {\n    const userTasksRef = database.ref(\n      `tasks/${auth.currentUser.uid}/${chosenDay}/${taskId}`\n    );\n    userTasksRef.remove().then(() => {\n      setRedirect(true);\n    });\n  };\n\n  return (\n    <TaskCreatorWrapper>\n      {isUserLoggedIn ? \"\" : <Redirect to=\"/login\" />}\n      {isRedirect ? <Redirect to=\"/home\" /> : \"\"}\n      <TaskCreatorContainer>\n        {isUpdate ? (\n          <>\n            <span>Update your task!</span>\n            <span>This task is assigned on {chosenDay}</span>\n          </>\n        ) : (\n          <>\n            <span>Create your task!</span>\n            <span>Choose a day</span>\n            <Calendar\n              chosenDay={chosenDay}\n              handleChoosingDay={(e) => setChosenDay(e.currentTarget.id)}\n              userData={{}}\n            />\n          </>\n        )}\n        <TextInput\n          value={taskName}\n          onChange={(e) => setTaskName(e.target.value)}\n          placeholder=\"Write your task\"\n        />\n        <StyledTextArea\n          placeholder=\"Write your description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <Button\n          onClick={handleTaskSave}\n          text={isUpdate ? \"Update task\" : \"Create Task\"}\n        />\n        {isUpdate ? (\n          <Button onClick={handleTaskDelete} isDanger text=\"Delete task\" />\n        ) : (\n          \"\"\n        )}\n        <ButtonLink to=\"/home\" text=\"Go back\" />\n      </TaskCreatorContainer>\n      <ToastContainer />\n    </TaskCreatorWrapper>\n  );\n};\n\nexport default CreateTaskPage;\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"../features/HomePage\";\nimport LoginPage from \"../features/Login\";\nimport RegisterPage from \"../features/Register\";\nimport CreateTaskPage from \"../features/TaskCreator\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Redirect from=\"/\" to=\"/home\" exact />\n        <Route path=\"/home\">\n          <HomePage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/create-task\" component={CreateTaskPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line no-console\nreportWebVitals();\n"],"sourceRoot":""}